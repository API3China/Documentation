(window.webpackJsonp=window.webpackJsonp||[]).push([[402],{1045:function(e,t,r){"use strict";r.r(t);var n=r(15),o=Object(n.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("TitleSpan",[e._v("部署文档")]),e._v(" "),r("h1",{attrs:{id:"frontmatter-title"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#frontmatter-title"}},[e._v("#")]),e._v(" "+e._s(e.$frontmatter.title))]),e._v(" "),r("VersionWarning"),e._v(" "),r("p",[e._v("Airnode 部署需要有两个文件：")]),e._v(" "),r("ul",[r("li",[r("p",[r("RouterLink",{attrs:{to:"/airnode/v0.6/reference/deployment-files/config-json.html"}},[e._v("config.json")]),e._v(" 是规定API-Airnode集成以及各种节点和部署参数的文件。")],1)]),e._v(" "),r("li",[r("p",[r("RouterLink",{attrs:{to:"/airnode/v0.6/reference/deployment-files/secrets-env.html"}},[e._v("secrets. nv")]),e._v(" 是保存秘密参数的文件 (airnode助记符、 Airnode部署将使用的 API 密钥、区块链供应商的 URL 等)。")],1)]),e._v(" "),r("li",[r("p",[r("RouterLink",{attrs:{to:"/airnode/v0.6/reference/deployment-files/aws-env.html"}},[e._v("aws.env")]),e._v("是在Airnode被部署到AWS云服务供应商时保存证书的文件。 它是Docker "),r("RouterLink",{attrs:{to:"/airnode/v0.6/grp-providers/docker/deployer-image.html"}},[e._v("部署镜像")]),e._v(" 所需要的。")],1)])]),e._v(" "),r("p",[e._v("Airnode 部署使用安全方案值（例如API 密钥）和区块链提供者URL等秘密。 在填充"),r("code",[e._v("config.json")]),e._v("时，你可以使用标准的shell变量插值语法（例如"),r("code",[e._v("${VARIABLE}")]),e._v("）来插入来自"),r("code",[e._v("secrets.env")]),e._v("的值。 这种保密方式是单独保存的，但在 Airnode 运行时 可以作为配置的一部分。")]),e._v(" "),r("p",[r("code",[e._v("config.json")]),e._v(" 文件在 "),r("code",[e._v("aws.env")]),e._v(" 中没有参考值，因为它是直接通过部署镜像阅读的。")]),e._v(" "),r("p",[e._v("部署镜像在部署后输出一个 "),r("RouterLink",{attrs:{to:"/airnode/v0.6/reference/deployment-files/receipt-json.html"}},[e._v("receipt.json")]),e._v(" 文件，其中包含有关部署的信息，以后可以参考这些信息进行交互或删除。")],1)],1)}),[],!1,null,null,null);t.default=o.exports}}]);