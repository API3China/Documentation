(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{1008:function(t,e,s){"use strict";s.r(e);var a=s(15),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("TitleSpan",[t._v("概念和定义")]),t._v(" "),a("h1",{attrs:{id:"frontmatter-title"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#frontmatter-title"}},[t._v("#")]),t._v(" "+t._s(t.$frontmatter.title))]),t._v(" "),a("VersionWarning"),t._v(" "),a("TocHeader"),t._v(" "),a("TOC",{staticClass:"table-of-contents",attrs:{"include-level":[2,3,4]}}),t._v(" "),a("p",[t._v("由 "),a("RouterLink",{attrs:{to:"/airnode/v0.6/concepts/requester.html"}},[t._v("请求者")]),t._v("提出了请求， 传递到"),a("RouterLink",{attrs:{to:"/airnode/v0.6/concepts/#airnoderrp-sol"}},[t._v("AirnodeRrp. ol")]),t._v(" 协议合约的"),a("code",[t._v("makeFullRequest()")]),t._v(" 或 "),a("code",[t._v("makeTemplateRequest()")]),t._v(" 函数 ，将请求添加到它的存储。 目标链外 "),a("RouterLink",{attrs:{to:"/airnode/v0.6/concepts/airnode.html"}},[t._v("Airnode")]),t._v(" 从AirnodeRrp.sol的存储中收集请求，并使用AirnodeRrp.sol的"),a("code",[t._v("fulFill()")]),t._v("函数进行响应。")],1),t._v(" "),a("blockquote",[a("p",[a("img",{attrs:{src:s(587),alt:"概念-请求"}})]),t._v(" "),a("ol",[a("li",[a("p",{staticClass:"diagram-line"},[t._v("请求者在 AirnodeRrp 协议合约上调用 makeFullRequest() 函数 。")])]),t._v(" "),a("li",[a("p",{staticClass:"diagram-line"},[t._v("makeFullRequest() 为请求分配了一个requestId用于跟踪，将requestId添加到存储，将请求发送到事件日志，并将requestId返回给请求者。")])]),t._v(" "),a("li",[a("p",{staticClass:"diagram-line",staticStyle:{color:"gray"}},[t._v("Airnode在其运行周期中，从事件日志中挑选请求。")])]),t._v(" "),a("li",[a("p",{staticClass:"diagram-line",staticStyle:{color:"blue"}},[t._v("Airnode从API获得数据并进行编码。 编码响应的长度不能超过 1024 字节。 (这在实践中可以忽略不计，因为大型响应的存储成本很高）。")])]),t._v(" "),a("li",[a("p",{staticClass:"diagram-line",staticStyle:{color:"green"}},[t._v("Airnode将响应发送给AirnodeRrp中的fulFill()，后者反过来从存储中移除待定的requestId并将响应转发给myFulFill()。 RequestId被作为响应的一部分。")])])])]),t._v(" "),a("p",[t._v("了解更多关于如何 [调用 Airnode](../grp-developers/call-an-airnode. md)。")]),t._v(" "),a("h2",{attrs:{id:"requestid"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#requestid"}},[t._v("#")]),t._v(" "),a("code",[t._v("requestId")])]),t._v(" "),a("p",[a("code",[t._v("requestId")]),t._v(" 唯一标识了一个请求。 当请求者使用AirnodeRrp.sol发出请求时，在请求被添加到事件日志之前，会生成一个"),a("code",[t._v("requestId")]),t._v("，并将requestId返回给请求者。 这个 "),a("code",[t._v("requestId")]),t._v("是某些数据成员的哈希值，取决于哪种类型的请求，如"),a("code",[t._v("makeFullRequest()")]),t._v(" 或"),a("code",[t._v("makeTemplateRequest()")]),t._v("。 它们的不同之处在于，一个使用 "),a("code",[t._v("endpointId")]),t._v(" 加上"),a("code",[t._v("airnode")]),t._v("地址，另一个使用"),a("code",[t._v("templateId")]),t._v(" （因为模板已经包含 "),a("code",[t._v("airnode")]),t._v("地址）。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("makeFullRequest()")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("makeTemplateRequest()")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("block.chainid")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("block.chainid")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("address(this)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("address(this)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("msg.sender")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("msg.sender")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("requesterRequestCount")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("requesterRequestCount")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}}),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("airnode")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("span",{staticStyle:{color:"purple","font-weight":"bold"}},[t._v("endpointId")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("span",{staticStyle:{color:"purple","font-weight":"bold"}},[t._v("templateId")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("sponsor")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("sponsor")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("sponsorWallet")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("sponsorWallet")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("fulfillAddress")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("fulfillAddress")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("fulfillFunctionId")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("fulfillFunctionId")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("parameters")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("parameters")])])])]),t._v(" "),a("p",[t._v("在请求（与 "),a("code",[t._v("requestId")]),t._v("）被添加到事件日志后，Airnode收集请求，并在响应请求前通过重新计算其哈希值来验证"),a("code",[t._v("requestId")]),t._v("。 这是用来验证参数没有被篡改。")]),t._v(" "),a("h2",{attrs:{id:"请求参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#请求参数"}},[t._v("#")]),t._v(" 请求参数")]),t._v(" "),a("p",[t._v("下面的列表概括了请求的参数的预期值。")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("templateId")]),t._v("是要使用的模板的ID_(仅用于 "),a("code",[t._v("makeTemplateRequest")]),t._v(")_。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("airnode")]),t._v(" (address)（地址）和 "),a("code",[t._v("endpointId")]),t._v(" 用于指定端点 "),a("em",[t._v("(仅用于 "),a("code",[t._v("makeFullRequest")]),t._v(")")]),t._v("。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("sponsor")]),t._v(" 和"),a("code",[t._v("sponsorWallet")]),t._v(" （地址）用于指定哪个钱包将被用来完成请求。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("fulfillAddress")]),t._v("和"),a("code",[t._v("fulfillFunctionId")]),t._v(" 用于指定哪个合约/函数将被调用，以完成请求。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("parameters")]),t._v(" 用于指定API和"),a("RouterLink",{attrs:{to:"/ois/v1.0.0/ois.html#_5-4-reservedparameters"}},[t._v("保留的")]),t._v("参数（参见"),a("RouterLink",{attrs:{to:"/airnode/v0.6/reference/specifications/airnode-abi-specifications.html"}},[t._v("Airnode ABI规范")]),t._v("，了解这些参数的编码方式）。")],1)])]),t._v(" "),a("h2",{attrs:{id:"完整请求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#完整请求"}},[t._v("#")]),t._v(" 完整请求")]),t._v(" "),a("p",[t._v("完整的请求根本不会被引用模板。 如果请求者不会再提出类似的请求（例如，在预测市场的背景下），完整请求是有用的。")]),t._v(" "),a("div",{staticClass:"language-solidity line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-solidity"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeFullRequest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("address")]),t._v(" airnode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bytes32")]),t._v(" endpointId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("address")]),t._v(" sponsor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("address")]),t._v(" sponsorWallet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("address")]),t._v(" fulfillAddress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bytes4")]),t._v(" fulfillFunctionId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bytes")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("calldata")]),t._v(" parameters\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("h2",{attrs:{id:"模板请求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模板请求"}},[t._v("#")]),t._v(" 模板请求")]),t._v(" "),a("p",[t._v("模板请求引用 "),a("code",[t._v("airnode")]),t._v(" 地址, "),a("code",[t._v("endpointId")]),t._v(" 和 "),a("code",[t._v("parameters")]),t._v(" 的模板。")]),t._v(" "),a("div",{staticClass:"language-solidity line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-solidity"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Template")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("address")]),t._v(" airnode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bytes32")]),t._v(" endpointId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bytes")]),t._v(" parameters"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[t._v("请求者在提出请求时，可以参考模板的 "),a("code",[t._v("templateId")]),t._v("，Airnode将获取这些模板并在请求中使用它们。")]),t._v(" "),a("div",{staticClass:"language-solidity line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-solidity"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeTemplateRequest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bytes32")]),t._v(" templateId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("address")]),t._v(" sponsor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("address")]),t._v(" sponsorWallet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("address")]),t._v(" fulfillAddress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bytes4")]),t._v(" fulfillFunctionId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bytes")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("calldata")]),t._v(" parameters\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("p",[t._v("当使用模板提出请求时， 在模板"),a("code",[t._v("parameters")]),t._v(" 中，编码的参数和在请求时提供的"),a("code",[t._v("parameters")]),t._v(" 将被Airnode使用。 如果两者包括一个具有相同名称的参数，将使用在请求时提供的参数。")]),t._v(" "),a("h2",{attrs:{id:"请求结果"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#请求结果"}},[t._v("#")]),t._v(" 请求结果")]),t._v(" "),a("p",[t._v("向Airnode 提出的请求有三种可能的结果：")]),t._v(" "),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/airnode/v0.6/concepts/request.html#fulfill"}},[t._v("完成")])],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/airnode/v0.6/concepts/request.html#fail"}},[t._v("失败")])],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/airnode/v0.6/concepts/request.html#ignore"}},[t._v("忽略")])],1)]),t._v(" "),a("h3",{attrs:{id:"完成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#完成"}},[t._v("#")]),t._v(" 完成")]),t._v(" "),a("p",[a("code",[t._v("fulfill()")]),t._v(" 是期望的结果，只有当Airnode从API提供者那里收到成功的响应时，它才会被调用。")]),t._v(" "),a("blockquote",[a("p",[a("img",{attrs:{src:s(588),alt:"请求-成果"}})]),t._v(" "),a("ol",[a("li",[a("p",{staticClass:"diagram-line"},[t._v("Airnode只有在API没有回应错误的情况下，才会调用AirnodeRRP.fulFill()，并给出回应。 AirnodeRrp.fulfill()执行对myFulFill()的回调，后者接收到响应。")])]),t._v(" "),a("li",[a("p",{staticClass:"diagram-line",staticStyle:{color:"green"}},[t._v("如果AirnodeRrp.fulFill()在内部发生失败，或者底层对myFulFill()的低级调用发生逆转，那么Airnode将启动步骤3中的过程，使请求失败。")])]),t._v(" "),a("li",[a("p",{staticClass:"diagram-line",staticStyle:{color:"green"}},[t._v("如果Airnode出错，或者被AnnodeRrp.fulFill()告知出错，它就会调用AnnodeRrp.fail()，将该请求从链上的requestIds的待定列表中删除。")])])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("重要备注")]),t._v(" "),a("p",[t._v("Fulfilly是将结果返还给请求者合约的唯一结果。")])]),t._v(" "),a("p",[t._v("对于一个成功的请求，Airnode调用AirnodeRrp.sol中的 "),a("code",[t._v("fulfill()")]),t._v("函数，该函数将反过来使用函数 "),a("code",[t._v("data")]),t._v("，在 "),a("code",[t._v("fulfillAddress")]),t._v("回调请求者合约，发送"),a("code",[t._v("data")]),t._v("。")]),t._v(" "),a("p",[a("code",[t._v("fulfill()")]),t._v(" 也会收到一个签名，以验证链上的响应数据是由Airnode提交的。 这是为了防止请求者完成他们自己的请求，用以操纵AirnodeRrp.sol提交的数据。")]),t._v(" "),a("p",[t._v("如果"),a("code",[t._v("fulfillFunctionId")]),t._v("的外部调用发生逆转， "),a("code",[t._v("fulfill()")]),t._v("将不会恢复。 然而，在这种情况下，或者如果在"),a("code",[t._v("fulfillAddress")]),t._v("没有匹配签名的函数，它将返回 "),a("code",[t._v("false")]),t._v("。 另一方面，如果外部调用成功返回或在"),a("code",[t._v("fulfillAddress")]),t._v("上没有部署合约，它将返回"),a("code",[t._v("true")]),t._v("。 在返回"),a("code",[t._v("false")]),t._v("的情况下，一个报错信息也将被返回到一个变量中，可以通过解码来检索恢复的字符串。 例如，当这个函数返回"),a("code",[t._v("false")]),t._v("时，Airnode将对这个变量进行解码，并在AirnodeRrp.sol上调用"),a("code",[t._v("fail()")]),t._v("，将恢复字符串作为错误信息。")]),t._v(" "),a("h3",{attrs:{id:"失败"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#失败"}},[t._v("#")]),t._v(" 失败")]),t._v(" "),a("p",[t._v("如上图所示，如果调用"),a("code",[t._v("fulfill()")]),t._v("的时候返回"),a("code",[t._v("false")]),t._v("，Airnode 会解码恢复字符串，并调用 "),a("code",[t._v("fail()")]),t._v(" 方法来报告失败。 出于隐私和安全原因，API错误信息不会在链上发送。 还要注意的是，节点不会在事后尝试履行失败的请求。")]),t._v(" "),a("p",[t._v('Airnode是无状态的，这意味着没有数据库存储哪些请求已经完成或失败，哪些在等待确认，哪些仍在等待。 这些信息是在每个请求-响应周期（大约每分钟）从链上检索的。 在每个周期中，检索到的请求需要以相同的方式排序，以确保它们是使用相同的nonce提交的。 这一点很重要，因为一个交易也有可能在下一个周期运行时还没有被确认。 如果发生这种情况，该交易将以 "更快的 "交易费用重新提交，覆盖之前的交易。')]),t._v(" "),a("h3",{attrs:{id:"已阻止"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#已阻止"}},[t._v("#")]),t._v(" 已阻止")]),t._v(" "),a("p",[t._v('Airnode 也依赖区块链供应商为它提供链上数据。 如果区块链提供商因为某些原因都不可用，有可能无法完全验证请求， 这意味着它无法将数据提交回到区块链。 如上所述，保持请求按照同一顺序，使用相同的nonce是至关重要的。 因此，任何由于区块链供应商的错误而无法完全验证的请求，都会被 "阻止"。 这意味着，它和其后的任何请求都无法在当前周期内提交，只能在下一个周期内重试。 值得注意的是，这是针对每个请求者的都有效的， 例如，从请求者A发出的请求变成 "阻止"，将不会阻止从请求者B发出的请求。')]),t._v(" "),a("p",[t._v("被阻止的请求在"),a("code",[t._v("ignoreBlockedRequestsAfterBlocks")]),t._v("（默认值：20）之后被忽略，这意味着它们被当作一个被忽略的请求（无效的请求被忽略，例如，赞助者和赞助者钱包不匹配的请求）。")]),t._v(" "),a("h4",{attrs:{id:"阻止的案例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#阻止的案例"}},[t._v("#")]),t._v(" 阻止的案例")]),t._v(" "),a("p",[t._v("在 Coordinator 生命周期中按时间顺序排列。")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("Airnode RRP有完整的请求（"),a("code",[t._v("makeFullRequest()1")]),t._v("），其中指定了所有的参数，也有模板请求，其中指定了一些参数并指定了包含其余参数的模板ID。 在获取模板后，如果节点找不到模板请求的模板，该请求会被阻止。 如果区块链供应商不能响应有效的请求（例如，节点提出了太多的请求并被限制了速率），就可能发生这种情况。")])]),t._v(" "),a("li",[a("p",[t._v("为了检查请求的授权，节点需要知道其端点ID。 整的请求已经指定了端点ID，这时应该为模板请求获取模板，指定端点ID。 在检查授权时，如果一个请求的端点ID没有被指定，该请求会被阻止。 永远不会发生这种情况，因因为缺少模板的模板请求在上面的例子#1中已经被阻止了。")])]),t._v(" "),a("li",[a("p",[t._v("节点用一些请求参数进行静态调用，检查一个特定的请求是否被授权（即是否应该响应它）。 在获取授权结果后，如果节点找不到某个请求的结果，该请求就会被阻止。如果区块链供应商不能响应有效的请求，就可能发生这种情况（例如，节点提出了太多的请求，并且受到速率限制）")])]),t._v(" "),a("li",[a("p",[t._v('节点为每个请求调用具有唯一请求ID的实施者，来进行API调用。 这些实施者应该返回一个有效载荷或一个错误信息（如果调用已经超时或API出错）。 在将实施者的响应映射回来时（代码中称为 "分类"），如果节点找不到某个请求的响应，该请求就会被阻止。 理论上，永远不应该发生这种情况。')])])]),t._v(" "),a("h3",{attrs:{id:"忽略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#忽略"}},[t._v("#")]),t._v(" 忽略")]),t._v(" "),a("p",[t._v("如果Airnode 甚至不能拒绝请求(例如请求者不是赞助者赞助的)，请求将被忽略。")]),t._v(" "),a("p",[t._v('在 X 块 (默认是 EVM 链的 20) 后，任何将会变成"阻止"的请求将会变成"忽略"。 这意味着Airnode将停止尝试处理该请求，以便处理后来的请求。')]),t._v(" "),a("h2",{attrs:{id:"检查请求是否正在等待完成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#检查请求是否正在等待完成"}},[t._v("#")]),t._v(" 检查请求是否正在等待完成")]),t._v(" "),a("p",[t._v("在AirnodeRrp.sol中有一个方便的方法，叫做"),a("code",[t._v("requestIsAwaitingFulfillment()")]),t._v("，它可以被调用来检查一个请求是否被提出但尚未完成/失败。 如果请求者提出了一个请求，收到了一个"),a("code",[t._v("requestId")]),t._v("，但没有听到回音，它可以调用这个方法来检查Airnode是否已经回调了 "),a("code",[t._v("fail()")]),t._v("。如果请求正在等待完成（即，如果"),a("code",[t._v("fulfill()")]),t._v(" 或 "),a("code",[t._v("fail()")]),t._v("还没有被回调，则返回"),a("code",[t._v("true")]),t._v("，否则返回"),a("code",[t._v("false")]),t._v("。")])],1)}),[],!1,null,null,null);e.default=n.exports},587:function(t,e,s){t.exports=s.p+"assets/img/concepts-request.f0111867.png"},588:function(t,e,s){t.exports=s.p+"assets/img/request-outcomes.1e4c7e60.png"}}]);