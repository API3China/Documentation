(window.webpackJsonp=window.webpackJsonp||[]).push([[118],{1070:function(t,r,e){"use strict";e.r(r);var a=e(15),n=Object(a.a)({},(function(){var t=this,r=t.$createElement,a=t._self._c||r;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"frontmatter-title"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#frontmatter-title"}},[t._v("#")]),t._v(" "+t._s(t.$frontmatter.title))]),t._v(" "),a("TOC",{staticClass:"table-of-contents",attrs:{"include-level":[2,3]}}),t._v(" "),a("p",[t._v("考虑以下内容：")]),t._v(" "),a("ul",[a("li",[t._v("分散的应用程序需要访问 "),a("RouterLink",{attrs:{to:"/api3/introduction/apis.html"}},[t._v("API")]),t._v("；")],1),t._v(" "),a("li",[t._v("API应通过 "),a("RouterLink",{attrs:{to:"/api3/introduction/first-party-oracles.html"}},[t._v("第一方预言机")]),t._v(" 与智能合约平台对接。")],1),t._v(" "),a("li",[t._v("对于API级别的去中心化， 应该采用"),a("RouterLink",{attrs:{to:"/api3/introduction/decentrally-governed-oracle-networks.html"}},[t._v("去中心化方式治理的预言机网络")]),t._v("。")],1)]),t._v(" "),a("p",[t._v("可以得出的结论是，去中心化治理的第一方预言机网络解决了API连接性问题。当然这在技术上是没问题的，但同样的解决方案可以通过一个更有用的场景来达成。")]),t._v(" "),a("p",[t._v("去中心化应用程序不能访问网络API，预言机解决方案则致力于建立去中心化接口来解决这个问题。 然而，这种方法的结果是劣质的解决方案和生态系统(详情请参阅\n"),a("a",{attrs:{href:"/api3-whitepaper-v1.0.2.pdf",target:"_api3-whitepaper"}},[t._v("API3\n白皮书r")]),t._v(")。")]),t._v(" "),a("p",{attrs:{align:"center"}},[a("img",{attrs:{src:e(605)}})]),t._v(" "),a("p",[t._v("相反，API3构建了完整的产品，称为去中心化API（简称dAPIs），是区块链原生的、去中心化的API服务。从用户（即使用去中心化应用的实体）的角度来看，使用dAPI的经验将与使用传统API的网络开发者非常相似；他们会找到他们需要的dAPI，支付订阅费并享受访问。")]),t._v(" "),a("p",[t._v("与传统的预言机网络不同的是，dAPI被定义为一个完整的产品而不是一个接口，dAPI包括底层API。这成就了一个卓越的解决方案（安全又经济的第一方预言机）和生态系统（将API供应商作为其成员）。")])],1)}),[],!1,null,null,null);r.default=n.exports},605:function(t,r,e){t.exports=e.p+"assets/img/dapi.16b77d7d.png"}}]);