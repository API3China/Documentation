(window.webpackJsonp=window.webpackJsonp||[]).push([[380],{1020:function(t,r,e){"use strict";e.r(r);var _=e(15),a=Object(_.a)({},(function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("TitleSpan",[t._v("API供应商")]),t._v(" "),e("h1",{attrs:{id:"frontmatter-title"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#frontmatter-title"}},[t._v("#")]),t._v(" "+t._s(t.$frontmatter.title))]),t._v(" "),e("VersionWarning"),t._v(" "),e("TocHeader"),t._v(" "),e("TOC",{staticClass:"table-of-contents",attrs:{"include-level":[2,3]}}),t._v(" "),e("p",[e("em",[t._v("请参阅我们的文章"),e("a",{attrs:{href:"https://medium.com/api3/getting-to-know-airnode-162e50ea243e",target:"_blank",rel:"noopener noreferrer"}},[t._v("了解Annode"),e("OutboundLink")],1),t._v("，了解该软件的技术概况。")])]),t._v(" "),e("h2",{attrs:{id:"无状态性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#无状态性"}},[t._v("#")]),t._v(" 无状态性")]),t._v(" "),e("p",[t._v("预言机节点通常在内存中或在数据库中，对区块链和它们收到的请求的状态（即它们处于哪个履行阶段）进行持久跟踪。 用系统术语来说，它们不是无记忆的。 这样做有很多弊端：")]),t._v(" "),e("ol",[e("li",[t._v("数据库成为一个单点故障。 编排冗余是昂贵的，而且不是小事。")]),t._v(" "),e("li",[t._v("区块链上发生的任何异常情况（区块重组、ommer区块等）都会导致预言机节点的状态与链上的状态不同步， 纠正起来并非易事。")]),t._v(" "),e("li",[t._v("一个高度有状态的应用程序有许多边缘情况。 这些情况很难被测试完全覆盖，而且很可能导致节点无法正常工作的错误。")])]),t._v(" "),e("p",[t._v("这些缺点导致预言机节点不稳定，这也是传统预言机节点为什么需要_专业的节点运营商_，需要全天候准备应对事件的根本原因。 由于这不是第一方预言机的现实要求，因此为第一方预言机设计的预言机节点必须是无状态的。")]),t._v(" "),e("p",[t._v("保持预言机节点状态的另一种方法是：预言机节点使用的区块链（例如以太坊）节点已经代表预言机节点保持状态。 这种责任的重复也会重复失败点（其中任何一个失败都会导致完全失败）。 因此，预言机节点应该依赖区块链节点来保持其状态，这需要设计协议以适应该方案。")]),t._v(" "),e("h3",{attrs:{id:"非幂等操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#非幂等操作"}},[t._v("#")]),t._v(" 非幂等操作")]),t._v(" "),e("p",[t._v("如果多次调用 API 操作与调用一次具有相同的效果，则 API 操作是幂等的。 例如，使用交易所 API 的 GET 操作来获取 ETH/USD 价格数据通常是幂等操作。 在 API 服务器端调用一次或多次不会产生任何影响。 相反，使用汇款服务提供商 API 的 POST 操作向另一方发送 100 美元将是非幂等操作。 每次调用都会额外发送 100 美元，因此多次使用该操作与使用一次会产生不同的效果。")]),t._v(" "),e("p",[t._v("预言机节点是无状态的，这意味着它无法“记住”它是否进行了与请求相关联的 API 调用，并且可能会在某些条件下重复调用。 目前这不是问题，因为当前预言机仅用于幂等操作。 我们的目标是让Airnode也能支持非幂等操作。 目前正在研究其他方法来实现这一目标，同时保护无状态性所提供的弹性。")]),t._v(" "),e("h2",{attrs:{id:"完全无服务器堆栈"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#完全无服务器堆栈"}},[t._v("#")]),t._v(" 完全无服务器堆栈")]),t._v(" "),e("p",[t._v("尽管无服务器功能以自动扩展而闻名，即使在极端并发使用情况下（这也可能在光明的未来派上用场），但 Airnode 使用它却是出于不同的原因：")]),t._v(" "),e("ul",[e("li",[t._v("无服务器函数是无状态的。 这意味着无论调用中出现什么问题，下一次调用都将从一个干净的状态开始。 这为内部（来自 Airnode 本身）或外部（来自 API、以太坊节点）错误的消除提供了极大的弹性。 换句话说，预言机节点会非常频繁地_自行关闭并再次打开_，这就自动修复大部分潜在问题。")]),t._v(" "),e("li",[t._v("无服务器函数是完全托管的。 它们提供了近乎_一劳永逸_的体验。")]),t._v(" "),e("li",[t._v("无服务器功能按需定价。 特别是考虑到 Airnode 不需要大量的并发使用，这将带来巨大的成本效益（甚至让用户保持在免费层（"),e("a",{attrs:{href:"https://aws.amazon.com/free",target:"_blank",rel:"noopener noreferrer"}},[t._v("AWS"),e("OutboundLink")],1),t._v("、"),e("a",{attrs:{href:"https://cloud.google.com/free",target:"_blank",rel:"noopener noreferrer"}},[t._v("GCP"),e("OutboundLink")],1),t._v("）的限制之下）")]),t._v(" "),e("li",[t._v("裸服务器功能很容易跨云供应商移植（例如，使用 "),e("a",{attrs:{href:"https://www.terraform.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Terraform 框架"),e("OutboundLink")],1),t._v("），尤其是当他们的云供应商特定的依赖项受到限制时。")])]),t._v(" "),e("h2",{attrs:{id:"处理安全问题的方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#处理安全问题的方法"}},[t._v("#")]),t._v(" 处理安全问题的方法")]),t._v(" "),e("p",[t._v("为了获得最佳的用户体验，Airnode 应尽可能使用完全托管的服务。 为了确保安全地完成此操作，该节点以防御方式设计。")]),t._v(" "),e("p",[t._v("Airnode 与两个外部方进行交互：")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("API")]),t._v("：尽管 Airnode 是为第一方预言机设计的，但它认为从第三方 API 提供数据也是一种有效的使用场景。 在这种情况下，对所有 API 的调用都包含在单独的无服务器函数调用中，因此它们不会导致节点级故障。")]),t._v(" "),e("li",[e("strong",[t._v("区块链节点")]),t._v("：同样，使用由第三方服务供应商运行的区块链（例如以太坊）节点被认为是有效的使用场景。 Airnode 同时使用所有供应商（即不通过基于 Quorum 的共识或负载均衡器之后）以实现最大可用性，这是通过其独特的无状态设计实现的。 与每个供应商进行的交互，都包含在单独的无服务器函数调用中，因此恶意供应商无法引发节点级故障。")])]),t._v(" "),e("p",[t._v("此外，该协议的实现方式是，区块链服务供应商不能篡改请求的参数，而只能拒绝服务 请注意，其他解决方案并非如此，因为它们将区块链服务供应商视为可信的一方。")]),t._v(" "),e("p",[t._v("由于无服务器功能的超强可用性，以及设置后一劳永逸的特性，建议使用云托管而不是本地托管。 作为预防措施，由于Airnode的完全无服务器设计，可以很容易地在多个云供应商上提供冗余，而且几乎没有成本。")])],1)}),[],!1,null,null,null);r.default=a.exports}}]);