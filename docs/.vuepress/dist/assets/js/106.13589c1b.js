(window.webpackJsonp=window.webpackJsonp||[]).push([[106],{1004:function(s,t,e){"use strict";e.r(t);var a=e(15),n=Object(a.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("TitleSpan",[s._v("概念和定义")]),s._v(" "),a("h1",{attrs:{id:"frontmatter-title"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#frontmatter-title"}},[s._v("#")]),s._v(" "+s._s(s.$frontmatter.title))]),s._v(" "),a("VersionWarning"),s._v(" "),a("TocHeader"),s._v(" "),a("TOC",{staticClass:"table-of-contents",attrs:{"include-level":[2,5]}}),s._v(" "),a("p",[s._v("Airnode可以使用授权者，授权请求者对其底层API的合约访问。 作为一种选项，API供应商也可以使用"),a("RouterLink",{attrs:{to:"/airnode/v0.6/concepts/relay-meta-auth.html"}},[s._v("中继元数据")]),s._v(" 来验证请求。 授权者需要API供应商具备区块链相关知识，中继元数据则不需要。")],1),s._v(" "),a("p",[s._v("与授权者和中继元数据相关的其他文档：")]),s._v(" "),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/airnode/v0.6/grp-providers/guides/build-an-airnode/apply-auth.html"}},[s._v("使用授权者")])],1),s._v(" "),a("li",[a("RouterLink",{attrs:{to:"/airnode/v0.6/grp-providers/guides/build-an-airnode/api-security.html"}},[s._v("API 安全性")])],1)]),s._v(" "),a("p",[s._v("当Airnode收到一个请求时，它可以使用链上的授权者合约来验证是否有必要作出回应。 授权者允许Airnode采取各种各样的措施。 以下是一些示例：")]),s._v(" "),a("ul",[a("li",[s._v("响应已经用DAI支付每月订阅费的赞助者的请求。")]),s._v(" "),a("li",[s._v("响应已用API3代币支付每次调用费用的个别请求。")]),s._v(" "),a("li",[s._v("响应被API3 DAO列入白名单的请求者提出的请求。")]),s._v(" "),a("li",[s._v("响应由Airnode所有者的后台（例如基于PayPal付款）列入白名单的赞助者提出的请求。")])]),s._v(" "),a("p",[s._v("授权者的一个常见用例是为Airnode运营商开发的"),a("a",{attrs:{href:"#requesterauthorizerwithairnode"}},[s._v("RequesterAuthorizerWithAirnode")]),s._v("授权者合约，这是可直接使用的。 它允许在每个端点的基础上，对请求者合约（有或没有过期时间戳）设置白名单。 这是最常用的情况，实际上已经可以满足许多Airnodes的需要。")]),s._v(" "),a("p",[s._v("下图说明Airnode 如何使用授权者。")]),s._v(" "),a("blockquote",[a("p",[a("img",{attrs:{src:e(585),alt:"概念授权人"}})]),s._v(" "),a("ol",[a("li",[a("p",{staticClass:"diagram-line"},[s._v("当Airnode启动时，它会读取其在config.json中声明的授权者合约列表。")])]),s._v(" "),a("li",[a("p",{staticClass:"diagram-line"},[s._v("Airnode在其运行周期内从事件日志中收集请求。")])]),s._v(" "),a("li",[a("p",{staticClass:"diagram-line"},[s._v("Airnode 将每个请求与授权者合约列表一起，发送到 "),a("code",[s._v("checkAuthorizationStatus()")]),s._v("。")])]),s._v(" "),a("li",[a("p",{staticClass:"diagram-line"},[a("code",[s._v("checkauthorizationStatus()")]),s._v(" 执行每个授权者合约中的"),a("code",[s._v("isAuthorized()")]),s._v('函数。 如果任何一个授权者合同返回 "true"，那么 "true "就会返回给Airnode，Airnode进而着手继续执行请求。')])])])]),s._v(" "),a("h3",{attrs:{id:"airnode-授权策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#airnode-授权策略"}},[s._v("#")]),s._v(" Airnode 授权策略")]),s._v(" "),a("p",[s._v("Airnode提供了两个授权者合同，其中一个（RequesterAuthorizerWithAirnode）可以被任何API供应商使用。 另一个（RequesterAuthorizerWithManager）则是由API3 DAO使用的。 本文档中的以下章节将会对它进行详细介绍。")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#requesterauthorizerwithairnode"}},[a("code",[s._v("RequesterAuthorizerWithAirnode")])])]),s._v(" "),a("li",[a("a",{attrs:{href:"#requesterauthorizerwithmanager"}},[a("code",[s._v("RequesterAuthorizerWithManager")])])])]),s._v(" "),a("p",[s._v("这两个授权者合约都继承和扩展了"),a("code",[s._v("RequesterAuthorizer")]),s._v("抽象合约，该合约也扩展了 "),a("code",[s._v("Whitelist")]),s._v("合约。 这意味着这两个授权者合约在向Airnode提供请求者合约之前，都需要对其设置白名单（对于"),a("code",[s._v("RequesterAuthorizerWithAirnode")]),s._v(" ，可以使用"),a("RouterLink",{attrs:{to:"/airnode/v0.6/reference/packages/admin-cli.html#requesterauthorizerwithairnode"}},[s._v("admin-cli")]),s._v("完成）。")],1),s._v(" "),a("p",[s._v("它们之间的主要区别是： "),a("code",[s._v("RequterAuthorizerWiAirnode")]),s._v(" 允许 Airnode 为指定的 Airnode授予白名单角色。 另一方面， "),a("code",[s._v("RequestterAuthorizerWiManager")]),s._v(" 允许管理员地址(阅读：API3 DAO) 对所有使用它的Airnode授予白名单角色。")]),s._v(" "),a("p",[s._v("一些常用的函数包括：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("requestterIsWhitelisted")]),s._v(": 被调用，用来来检查请求者是否列入白名单，可以使用Airnode-endpoint 配对。")]),s._v(" "),a("li",[a("code",{staticStyle:{"overflow-wrap":"break-word"}},[s._v("airnodeToEndpointIdToRequesterToWhitelistStatus")]),s._v(": 调用他，从Airnode–endpoint配对获得请求者的详细的白名单状态。")])]),s._v(" "),a("h3",{attrs:{id:"自定义授权者"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义授权者"}},[s._v("#")]),s._v(" 自定义授权者")]),s._v(" "),a("p",[s._v("自定义授权者合约，可以执行任意授权逻辑。 可能有这样的例子，如果请求者上个月向Airnode发出的请求少于特定数量，Airnode才会回应请求，从而有效地实现了链上呼叫配额。")]),s._v(" "),a("h3",{attrs:{id:"授权者列表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#授权者列表"}},[s._v("#")]),s._v(" 授权者列表")]),s._v(" "),a("p",[s._v("Airnode 授权者放于config.json 文件中，位于 "),a("RouterLink",{attrs:{to:"/airnode/v0.6/grp-providers/guides/build-an-airnode/configuring-airnode.html#chains"}},[a("code",[s._v("chain[n].authorers")])]),s._v(" 中。 授权者通常检查单个条件 (请求者是否每月支付了费用 ，是不是"),a("code",[s._v("请求者")]),s._v(" 白名单等)。 授权者也可以合并来执行更复杂的策略。 如果列表中的任何授权者都允许访问，请求将被视为已授权。 从逻辑 的角度来看，授权结果已完成"),a("code",[s._v("or")]),s._v("操作。")],1),s._v(" "),a("h3",{attrs:{id:"授权者界面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#授权者界面"}},[s._v("#")]),s._v(" 授权者界面")]),s._v(" "),a("p",[s._v("继承自 "),a("code",[s._v("IAuthorizer")]),s._v(" 的授权者合约，可以用来执行基于其输入参数的任意授权策略。")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("requestId")]),s._v(": bytes32")]),s._v(" "),a("li",[a("code",[s._v("airnode")]),s._v(": address")]),s._v(" "),a("li",[a("code",[s._v("endpointId")]),s._v(": bytes32")]),s._v(" "),a("li",[a("code",[s._v("sponsor")]),s._v(": address")]),s._v(" "),a("li",[a("code",[s._v("requester")]),s._v(": address")])]),s._v(" "),a("p",[s._v("请注意，授权者不必使用所有的参数，甚至可以决定任意的链上标准，如"),a("code",[s._v("block.number")]),s._v("（例如，不要对block number N之后的任何请求做出回应）。 授权者是与以下接口的合约：")]),s._v(" "),a("div",{staticClass:"language-solidity line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-solidity"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("interface")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("IAuthorizer")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("isAuthorized")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("bytes32")]),s._v(" requestId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("address")]),s._v(" airnode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("bytes32")]),s._v(" endpointId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("address")]),s._v(" sponsor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("address")]),s._v(" requester\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("external")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("view")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("returns")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("bool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("以下是如何创建最简单的授权者形式的例子。 授权者允许任何请求者合约调用endpointId(0xf2ee...)。")]),s._v(" "),a("div",{staticClass:"language-solidity line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-solidity"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("contract")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("myAuthorizer")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("is")]),s._v(" IAuthorizer\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("isAuthorized")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("bytes32")]),s._v(" requestId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("address")]),s._v(" airnode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("bytes32")]),s._v(" endpointId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("address")]),s._v(" sponsor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("address")]),s._v(" requester\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("external")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("view")]),s._v(" override "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("returns")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("bool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("bytes32")]),s._v(" expected "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0xf2ee")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" endpointId "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" expected"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("h3",{attrs:{id:"为什么需要授权计划"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么需要授权计划"}},[s._v("#")]),s._v(" 为什么需要授权计划？")]),s._v(" "),a("p",[s._v("Aircode需要有选择性地满足请求的能力。 这是由于两个主要原因:")]),s._v(" "),a("ol",[a("li",[s._v("Airnode 只能满足已向Airnode 所有者支付费用 的请求者提出的请求，这使得他们能够将自己的服务货币化。")]),s._v(" "),a("li",[s._v("Airnode 的服务是敏感的，只能被某些请求者，例如已经通过 KYC 的访问。")])]),s._v(" "),a("p",[s._v("没有授权者计划或同等功能的协议不能被视为无需许可，并且将无法实现广泛应用。")]),s._v(" "),a("h3",{attrs:{id:"是否需要授权者"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#是否需要授权者"}},[s._v("#")]),s._v(" 是否需要授权者？")]),s._v(" "),a("p",[s._v("授权者不是必需的。 Airnode运营商可以使用 "),a("RouterLink",{attrs:{to:"/airnode/v0.6/grp-providers/guides/build-an-airnode/api-security.html#relayed-meta-data-security-schemes"}},[s._v("中继元数据安全方案")]),s._v("。 可以同时使用授权者和中继安全方案。")],1),s._v(" "),a("h3",{attrs:{id:"如何执行授权者"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何执行授权者"}},[s._v("#")]),s._v(" 如何执行授权者？")]),s._v(" "),a("p",[s._v("关于如何执行授权策略，有两点要考虑：")]),s._v(" "),a("ol",[a("li",[s._v("如果这些策略被保存在链外，请求者就无法看到它们或检查它们是否满足。 此外，Airnode 所有者更新策略 (例如增加服务费)需要与请求者进行链下的协调。")]),s._v(" "),a("li",[s._v("将策略嵌入到请求-响应循环，会带来gas费用开销。")])]),s._v(" "),a("p",[s._v("基于这些考虑，Airnode 采用混合方法。 Airnode通过链外渠道宣布其授权策略，作为授权者合约列表的地址。 每当Airnode收到一个请求时，它就会通过静态调用来检查是否应该满足这个请求，这个静态调用就是查询链上策略。 同样，请求者可以通过 进行静态调用来检查是否获得授权。 这个方案允许Airnode 设置透明和灵活的策略，并且不会用到gas间接费用。")]),s._v(" "),a("h3",{attrs:{id:"access-deny-allow-filter"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#access-deny-allow-filter"}},[s._v("#")]),s._v(" Access (deny, allow, filter)")]),s._v(" "),a("p",[s._v("授权者是基于特定Airnode的"),a("code",[s._v("config.json")]),s._v("的"),a("code",[s._v("chains")]),s._v("字段影响访问的。")]),s._v(" "),a("h4",{attrs:{id:"deny-all"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deny-all"}},[s._v("#")]),s._v(" Deny All")]),s._v(" "),a("p",[s._v("如果Airnode 想要拒绝某个特定链上的所有访问权限，它就不应该在这条链上运行 (例如，它不应该存在于 "),a("code",[s._v("chain")]),s._v(' 的列表中。) 下面的例子中，将会把 "拒绝所有 "应用到链1和3-n，因为它们在'),a("code",[s._v("chains")]),s._v("字段中没有相关条目。")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[s._v(" chains"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    id"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    authorizers"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    ...\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h4",{attrs:{id:"全部允许"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全部允许"}},[s._v("#")]),s._v(" 全部允许")]),s._v(" "),a("p",[a("code",[s._v("chains.authorizers")]),s._v(" 列出的[]，意味着“让所有的都能通过”。 在下面的示例中，链2将允许访问任何请求者。")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[s._v("  chains"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      id"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      authorizers"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n      ...\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    ...\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h4",{attrs:{id:"全部过滤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全部过滤"}},[s._v("#")]),s._v(" 全部过滤")]),s._v(" "),a("p",[s._v("如果Airnode 想要选择性地授予访问权限，它应该使用一个或多个执行过滤逻辑的授权者。 在下面的示例中，Airnode 将接受链上 "),a("em",[s._v('"2"')]),s._v(" 上的请求，请求者将被两个授权者过滤。")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[s._v(" chains"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n   id"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n   authorizers"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("'0xcd...cd8d'"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("'0xff...d19c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n   ...\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h3",{attrs:{id:"requesterauthorizerwithairnode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#requesterauthorizerwithairnode"}},[s._v("#")]),s._v(" RequesterAuthorizerWithAirnode")]),s._v(" "),a("p",[s._v("此合约实现了一个基于请求的RRP授权者，具有三种类型的角色。")]),s._v(" "),a("ol",[a("li",[s._v("白名单过期扩展程序：允许延长临时白名单过期时间。")]),s._v(" "),a("li",[s._v("白名单过期设置：允许设置临时白名单 过期时间(即他们也可以缩短过期时间)。")]),s._v(" "),a("li",[s._v("无限期白名单：允许无限期的白名单/非白名单。每个Airnode的地址被视为拥有所有这三个角色的，他们也可以将这些角色授予其他账户，其中包括实现任意业务逻辑的合约。")])]),s._v(" "),a("h4",{attrs:{id:"extendwhitelistexpiration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#extendwhitelistexpiration"}},[s._v("#")]),s._v(" extendWhitelistExpiration")]),s._v(" "),a("p",[a("code",[s._v("extendWhitelistExpiration()")]),s._v(" 函数可以被白名单过期扩展器或 Airnotode 地址调用，以延长Airnode-endpoint 对应的请求者 的白名单过期期限。")]),s._v(" "),a("p",[s._v("此函数发布"),a("code",[s._v("ExtendedWhitelistExpiration")]),s._v("事件，并且有以下签名：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("    event ExtendedWhitelistExpiration(\n        address indexed airnode,\n        bytes32 endpointId,\n        address indexed requester,\n        address indexed sender,\n        uint256 expiration\n    );\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h4",{attrs:{id:"setwhitelistexpiration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#setwhitelistexpiration"}},[s._v("#")]),s._v(" setWhitelistExpiration")]),s._v(" "),a("p",[a("code",[s._v("extendWhitelistExpiration()")]),s._v(" 函数可以被白名单过期扩展器或 Airnotode 地址调用，以延长Airnode-endpoint 对应的请求者 的白名单过期期限。 这可能会加速过期。")]),s._v(" "),a("p",[s._v("此函数发布"),a("code",[s._v("ExtendedWhitelistExpiration")]),s._v("事件，并且有以下签名：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("    event SetWhitelistExpiration(\n        address indexed airnode,\n        bytes32 endpointId,\n        address indexed requester,\n        address indexed sender,\n        uint256 expiration\n    );\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h4",{attrs:{id:"setwhiteliststatuspastexpiration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#setwhiteliststatuspastexpiration"}},[s._v("#")]),s._v(" setWhitelistStatusPastExpiration")]),s._v(" "),a("p",[a("code",[s._v("setWhitelistStatusPastExpiration()")]),s._v(" 函数可以被一个无限期的 白名单或Airnode 地址调用，以设置请求者的白名单状态超过Airnode-终端对的到期时间。 这对允许访问一个API很有用，即使过了有效期。 例如，继续授权请求，同时锁定一定数量的API3代币。")]),s._v(" "),a("p",[s._v("此函数发布"),a("code",[s._v("ExtendedWhitelistExpiration")]),s._v("事件，并且有以下签名：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("    event SetWhitelistStatusPastExpiration(\n        address indexed airnode,\n        bytes32 endpointId,\n        address indexed requester,\n        address indexed sender,\n        bool status\n    );\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h4",{attrs:{id:"isauthorized"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#isauthorized"}},[s._v("#")]),s._v(" isAuthorized")]),s._v(" "),a("p",[a("code",[s._v("isAuthorized()")]),s._v(" 函数将被 AirnodeRrp 调用，来验证请求的授权状态。 此函数将返回所有白名单请求者合约、管理员和 Airnode 运营商地址的真实值。")]),s._v(" "),a("h3",{attrs:{id:"requesterauthorizerwithmanager"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#requesterauthorizerwithmanager"}},[s._v("#")]),s._v(" RequesterAuthorizerWithManager")]),s._v(" "),a("p",[s._v("该合同实现了一个基于请求者的RRP授权器，并指定API3 DAO作为管理者，或者换句话说，所有Airnodes中排名最高的管理员。")]),s._v(" "),a("p",[s._v("管理器和它授予白名单过期扩展、白名单过期设置和无限期白名单角色的账户，使用"),a("code",[s._v("RequesterAuthorizerWithManager")]),s._v("将所有Airnode的请求者列入白名单。")]),s._v(" "),a("h4",{attrs:{id:"extendwhitelistexpiration-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#extendwhitelistexpiration-2"}},[s._v("#")]),s._v(" extendWhitelistExpiration")]),s._v(" "),a("p",[a("code",[s._v("extendWhitelistExpiration()")]),s._v(" 函数可以被白名单过期扩展器或 Airnotode 地址调用，以延长Airnode-endpoint 对应的请求者的白名单过期期限。")]),s._v(" "),a("p",[s._v("此函数发布"),a("code",[s._v("ExtendedWhitelistExpiration")]),s._v("事件，并且有以下签名：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("    event ExtendedWhitelistExpiration(\n        address indexed airnode,\n        bytes32 endpointId,\n        address indexed requester,\n        address indexed sender,\n        uint256 expiration\n    );\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h4",{attrs:{id:"setwhitelistexpiration-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#setwhitelistexpiration-2"}},[s._v("#")]),s._v(" setWhitelistExpiration")]),s._v(" "),a("p",[a("code",[s._v("extendWhitelistExpiration()")]),s._v(" 函数可以被白名单过期扩展器或 Airnotode 地址调用，以延长Airnode-endpoint 对应的请求者的白名单过期期限。 这可能会加速过期。")]),s._v(" "),a("p",[s._v("此函数发布"),a("code",[s._v("ExtendedWhitelistExpiration")]),s._v("事件，并且有以下签名：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("    event SetWhitelistExpiration(\n        address indexed airnode,\n        bytes32 endpointId,\n        address indexed requester,\n        address indexed sender,\n        uint256 expiration\n    );\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h4",{attrs:{id:"setwhiteliststatuspastexpiration-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#setwhiteliststatuspastexpiration-2"}},[s._v("#")]),s._v(" setWhitelistStatusPastExpiration")]),s._v(" "),a("p",[a("code",[s._v("setWhitelistStatusPastExpiration()")]),s._v(" 函数可以被一个无限期的白名单或Airnode 地址调用，以设置请求者的白名单状态超过Airnode-endpoint配对的到期时间。 即使过期日期已过，这对于允许访问API 非常有用。 例如，在一定数量的API3代币被锁定时，可以保持授权请求。")]),s._v(" "),a("p",[s._v("此函数发布"),a("code",[s._v("ExtendedWhitelistExpiration")]),s._v("事件，并且有以下签名：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("    event SetWhitelistStatusPastExpiration(\n        address indexed airnode,\n        bytes32 endpointId,\n        address indexed requester,\n        address indexed sender,\n        bool status\n    );\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h4",{attrs:{id:"isauthorized-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#isauthorized-2"}},[s._v("#")]),s._v(" isAuthorized")]),s._v(" "),a("p",[a("code",[s._v("isAuthorized()")]),s._v(" 函数将被 AirnodeRrp 调用，来验证请求的授权状态。 此函数将返回所有白名单请求者合约、管理员和 Airnode 运营商地址的真实值。")]),s._v(" "),a("divider")],1)}),[],!1,null,null,null);t.default=n.exports},585:function(s,t,e){s.exports=e.p+"assets/img/concepts-authorizers.b95c66dc.png"}}]);