(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{1031:function(t,s,a){"use strict";a.r(s);a(602);var e=a(15),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("TitleSpan",[t._v("创建一个 Airnode")]),t._v(" "),e("h1",{attrs:{id:"frontmatter-title"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#frontmatter-title"}},[t._v("#")]),t._v(" "+t._s(t.$frontmatter.title))]),t._v(" "),e("VersionWarning"),t._v(" "),e("TocHeader"),t._v(" "),e("TOC",{staticClass:"table-of-contents",attrs:{"include-level":[2,3]}}),t._v(" "),e("p",[t._v("作为Airnode 部署的一部分，您可以决定部署两个不同的 HTTP 网关。")]),t._v(" "),e("ul",[e("li",[t._v("HTTP 网关：测试")]),t._v(" "),e("li",[t._v("HTTP 签名数据网关：生产使用")])]),t._v(" "),e("h2",{attrs:{id:"网关的差异"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#网关的差异"}},[t._v("#")]),t._v(" 网关的差异")]),t._v(" "),e("p",[t._v("两种网关的设置是相同的。 不同之处在于它们的目的和反应。 只有在部署到AWS和GCP时才允许网关。")]),t._v(" "),e("blockquote",[e("p",[e("img",{attrs:{src:a(601),alt:"网关"}})])]),t._v(" "),e("h3",{attrs:{id:"http网关"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http网关"}},[t._v("#")]),t._v(" HTTP网关")]),t._v(" "),e("p",[t._v("常规的HTTP网关是严格用于测试的。 使用像CURL这样的简单工具，你可以测试Airnode配置中的端点是否正常工作，而无需访问区块链。")]),t._v(" "),e("h3",{attrs:{id:"http-签名数据网关"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http-签名数据网关"}},[t._v("#")]),t._v(" HTTP 签名数据网关")]),t._v(" "),e("p",[t._v("HTTP签名的数据网关是用于生产目的。 虽然它的执行方式与HTTP网关类似，但其响应是经过签名的，不包含"),e("code",[t._v("rawValue")]),t._v("字段。 该网关由链外代码源执行，该代码源可能反过来将数据推送到区块链上。")]),t._v(" "),e("h2",{attrs:{id:"设置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设置"}},[t._v("#")]),t._v(" 设置")]),t._v(" "),e("p",[t._v("启用 "),e("code",[t._v("config.json")]),t._v(" 文件中的字段 "),e("code",[t._v("nodeSetings.httpGateway")]),t._v(" 和 "),e("code",[t._v("nodeSettings.httpSignedDataGatel")]),t._v("。")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("enabled")]),t._v(": 开启/禁用网关的布尔值。")]),t._v(" "),e("li",[e("strong",[t._v("apiKey")]),t._v(": 用户定义的 API 密钥来验证网关。 密钥长度必须介于 30 - 120 个字符之间。")]),t._v(" "),e("li",[e("strong",[t._v("maxConcurrency")]),t._v(": (可选) 一个高于零的数字，代表了为网关请求服务的无服务器函数的 最大数量。 当省略时，没有设置最大并发数。")])]),t._v(" "),e("div",{staticClass:"language-json line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"nodeSettings"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"cloudProvider"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"aws"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"region"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"us-east-1"')]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"airnodeWalletMnemonic"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${AIRNODE_WALLET_MNEMONIC}"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"heartbeat"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("..."),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"httpGateway"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"enabled"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"apiKey"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${HTTP_GATEWAY_API_KEY}"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"maxConcurrency"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"httpSignedDataGateway"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"enabled"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"apiKey"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${HTTP_SIGNED_DATA_GATEWAY_API_KEY}"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"maxConcurrency"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  ...\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br")])]),e("p",[t._v("在 "),e("code",[t._v("triggers.http[n]")]),t._v("和/或"),e("code",[t._v("triggers.httpSignedData[n]")]),t._v("数组中，添加网关可以响应的预期端点。 相应的数组不需要匹配。 可能想测试所有的端点，但只能通过HTTP签名数据网关或通过RRP服务某些端点。")]),t._v(" "),e("div",{staticClass:"language-json line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// in config.json")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"triggers"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"rrp"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"endpointId"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0xf466b8feec41e9e50815e0c9dca4db1ff959637e564bb13fefa99e9f9f90453c"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"oisTitle"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"CoinGecko Basic Request"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"endpointName"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"coinMarketData"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"http"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"endpointId"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0xf466b8feec41e9e50815e0c9dca4db1ff959637e564bb13fefa99e9f9f90453c"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"oisTitle"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"CoinGecko Basic Request"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"endpointName"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"coinMarketData"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"httpSignedData"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"endpointId"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0xf466b8feec41e9e50815e0c9dca4db1ff959637e564bb13fefa99e9f9f90453c"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"oisTitle"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"CoinGecko Basic Request"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"endpointName"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"coinMarketData"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br")])]),e("h2",{attrs:{id:"网关url"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#网关url"}},[t._v("#")]),t._v(" 网关URL")]),t._v(" "),e("p",[t._v("当Airnode部署时，每个网关（当启用时）都会生成一个网关的URL。 您可以获取 "),e("code",[t._v("api.httpGatewayUrl")]),t._v(" 和 "),e("code",[t._v("api. tpSignedDataGatewayUrl")]),t._v(" ，两者来自于 "),e("RouterLink",{attrs:{to:"/airnode/v0.6/reference/deployment-files/receipt-json.html"}},[t._v("receivt.json")]),t._v(" 文件， 由 Airnode 部署器返回。 它们也可以作为从Airnode的"),e("RouterLink",{attrs:{to:"/airnode/v0.6/grp-providers/guides/build-an-airnode/heartbeat.html"}},[t._v("heartbeat")]),t._v(" 发送至你指定的heartbeat URL的有效载荷的一部分。")],1),t._v(" "),e("h2",{attrs:{id:"使用-curl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用-curl"}},[t._v("#")]),t._v(" 使用 CURL")]),t._v(" "),e("p",[t._v("为了执行由任一网关提供的端点，作为CURL调用的一部分，需要做到以下几点。")]),t._v(" "),e("ul",[e("li",[t._v("以"),e("code",[t._v("endpointId")]),t._v("作为路径参数发出一个POST请求。 可以在config.json中的 "),e("code",[t._v("triggers.http.endpointId")]),t._v(" 或"),e("code",[t._v("triggers.httpSignedData.endpointId")]),t._v("下找到"),e("code",[t._v("endpointId")]),t._v("。")]),t._v(" "),e("li",[t._v("添加"),e("code",[t._v("Content-Type")]),t._v("头部，设置为"),e("code",[t._v("application/json")]),t._v("。")]),t._v(" "),e("li",[t._v("添加 "),e("code",[t._v("x-api-key")]),t._v(" 头, 设置为 apiKey "),e("code",[t._v("x-api-key")]),t._v("可以在config.json的"),e("code",[t._v("nodeSettings.httpGateway.apiKey")]),t._v("或"),e("code",[t._v("nodeSettings.httpSignedDataGateway.apiKey")]),t._v("下找到。")]),t._v(" "),e("li",[t._v("将参数/编码参数放在请求正文中。")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("CURL 参数")]),t._v(" "),e("th",[t._v("输入")]),t._v(" "),e("th",[t._v("CURL 选项")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("Content-Type")]),t._v(" "),e("td",[t._v("header")]),t._v(" "),e("td",[e("code",[t._v("-H 'Content-Type: application/json'")])])]),t._v(" "),e("tr",[e("td",[t._v("x-api-key")]),t._v(" "),e("td",[t._v("header")]),t._v(" "),e("td",[e("code",[t._v("-H 'x-api-key: 8d890a46-799d-48b3-a337-8531e23dfe8e'")])])]),t._v(" "),e("tr",[e("td",[t._v("endpointId")]),t._v(" "),e("td",[t._v("path")]),t._v(" "),e("td",[e("code",[t._v("<gatewayUrl>/0xf466b8feec...99e9f9f90453c")])])]),t._v(" "),e("tr",[e("td",[t._v("* parameters"),e("div",{staticClass:"tSmall"},[t._v("HTTP Gateway")])]),t._v(" "),e("td",[t._v("body")]),t._v(" "),e("td",[e("code",[t._v('-d \'{"parameters": {"param1": "myValue", "param2": 5}}\'')])])]),t._v(" "),e("tr",[e("td",[t._v("* encodedParameters"),e("div",{staticClass:"tSmall"},[t._v("HTTP Signed Data Gateway")])]),t._v(" "),e("td",[t._v("body")]),t._v(" "),e("td",[e("code",[t._v('-d \'{"encodedParameters": "0x3173737300....000"}\'')])])])])]),t._v(" "),e("p",[t._v("* 网关参数的命名不同。 HTTP 签名数据网关要求使用 "),e("RouterLink",{attrs:{to:"/airnode/v0.6/reference/specifications/airnode-abi-specifications.html"}},[t._v("Airnode ABI")]),t._v("对"),e("code",[t._v("encodedParameters")]),t._v(" 进行编码。")],1),t._v(" "),e("p",[t._v("将以下示例中的 "),e("code",[t._v("<gatewayUrl>")]),t._v(" 替换为使用 "),e("code",[t._v("httpGatewayUrl")]),t._v(" 或 "),e("code",[t._v("httpSignedDataGatewayUrl")]),t._v(" 字段的"),e("code",[t._v("receipt.json")]),t._v(" 文件中的URL。 部署 Airnode 时会创建"),e("RouterLink",{attrs:{to:"/airnode/v0.6/reference/deployment-files/receipt-json.html"}},[t._v("receipt.json")]),t._v(" 文件。")],1),t._v(" "),e("h3",{attrs:{id:"请求"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#请求"}},[t._v("#")]),t._v(" 请求")]),t._v(" "),e("Tabs",{attrs:{type:"border-card"}},[e("Tab",{attrs:{label:"HTTP网关"}},[e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n-X POST "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n-H "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Content-Type: application/json'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n-H "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x-api-key: 8d890a46-799d-48b3-a337-8531e23dfe8e'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n-d "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'{"parameters": {"param1": "myValue", "param2": 5}}\'')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<gatewayUrl>/0xf466b8feec...99e9f9f90453c'")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])])]),t._v(" "),e("p",[t._v("::: HTTP 签名数据网关")]),t._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n-X POST "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n-H "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Content-Type: application/json'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n-H "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x-api-key: 8d890a46-799d-48b3-a337-8531e23dfe8e'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n-d "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'{"encodedParameters": "0x3173737300....000"}\'')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<gatewayUrl>/0xf466b8feec...99e9f9f90453c'")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[t._v(":::")])],1),t._v(" "),e("h3",{attrs:{id:"响应"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#响应"}},[t._v("#")]),t._v(" 响应")]),t._v(" "),e("Tabs",{attrs:{type:"border-card"}},[e("Tab",{attrs:{label:"HTTP网关"}},[e("div",{staticClass:"language-json line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"rawValue"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"usd"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"6421.4"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"encodedValue"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0x0000000000000000000000000000000000000000000000000000000ef373e180"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"values"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"64214000000"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[t._v("响应格式是一个简单的 JSON 对象，具有以下字段：")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("rawValue")]),t._v(" - API 响应")]),t._v(" "),e("li",[e("code",[t._v("values")]),t._v(" - 被"),e("RouterLink",{attrs:{to:"/airnode/v0.6/reference/packages/adapter.html#conversion"}},[t._v("提取并转换")]),t._v("为目标类型后的数值数组")],1),t._v(" "),e("li",[e("code",[t._v("encodedValue")]),t._v(" - 编码后的字节值，在链上的响应交易中作为有效载荷发送。")])])]),t._v(" "),e("Tab",{attrs:{label:"HTTP签名数据网关"}},[e("div",{staticClass:"language-json line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"data"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"timestamp"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1648226003"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"value"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0x0000000000000000000000000000000000000000000000000000000a571a14c0"')]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"signature"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0xa74e4312e2e6fa2de2997ef43e417e3b82d0019ac2a84012300f706f8b213e0d6e1ae9301052ec25b71addae1b1bceb4617779abfc6acd5a951e20a0aaabe6f61b"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("p",[t._v("响应格式是一个简单的 JSON 对象，具有以下字段：")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("data.timestamp")]),t._v(" - 应用于响应的时间戳。")]),t._v(" "),e("li",[e("code",[t._v("data.value")]),t._v(" - 响应中作为有效载荷发送的编码字节值。 适合于在链上使用。")]),t._v(" "),e("li",[e("code",[t._v("signature")]),t._v(" - 响应已被Airnode签名。")])])])],1),t._v(" "),e("p",[t._v("在 "),e("RouterLink",{attrs:{to:"/airnode/v0.6/grp-providers/tutorial/quick-deploy-aws/#execute-endpoint"}},[t._v("快速部署AWS")]),t._v(" 和 "),e("RouterLink",{attrs:{to:"/airnode/v0.6/grp-providers/tutorial/quick-deploy-gcp/#execute-endpoint"}},[t._v("快速部署GCP")]),t._v(" 教程中使用CURL 调用 HTTP 网关的其他例子。")],1)],1)}),[],!1,null,null,null);s.default=n.exports},457:function(t,s,a){},601:function(t,s,a){t.exports=a.p+"assets/img/gateway.0f34f5db.png"},602:function(t,s,a){"use strict";a(457)}}]);