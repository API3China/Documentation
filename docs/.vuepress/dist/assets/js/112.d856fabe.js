(window.webpackJsonp=window.webpackJsonp||[]).push([[112],{1042:function(t,s,a){"use strict";a.r(s);var e=a(15),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("TitleSpan",[t._v("创建一个 Airnode")]),t._v(" "),e("h1",{attrs:{id:"frontmatter-title"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#frontmatter-title"}},[t._v("#")]),t._v(" "+t._s(t.$frontmatter.title))]),t._v(" "),e("VersionWarning"),t._v(" "),e("TocHeader"),t._v(" "),e("TOC",{staticClass:"table-of-contents",attrs:{"include-level":[2,4]}}),t._v(" "),e("p",[t._v("API与Airnode的成功集成，需要彼此的接口映射。 这是用OIS（"),e("RouterLink",{attrs:{to:"/ois/v1.0.0/ois.html"}},[t._v("Oracle集成规范")]),t._v("）json对象完成的，在config.json文件中可以找到，根据设计，其集成需遵循三个基本步骤。")],1),t._v(" "),e("ul",[e("li",[t._v("指定 API 操作")]),t._v(" "),e("li",[t._v("指定了Airnode 端点")]),t._v(" "),e("li",[t._v("Airnode 端点已映射到 API 操作")])]),t._v(" "),e("blockquote",[e("p",[e("img",{attrs:{src:a(603),alt:"api-integration-ois"}}),t._v(" "),e("br"),e("br")]),t._v(" "),e("p",{staticClass:"diagram-line"},[t._v("config.json中的OIS对象，包含API操作与Airnode端点定义的映射信息。")])]),t._v(" "),e("p",[t._v("OIS是一个API操作的映射，如"),e("code",[t._v("GET /coins/{id}")]),t._v("，将其映射到Airnode端点。 当请求者合约调用AirnodeRrp.sol合同请求函数，如"),e("code",[t._v("makeFullRequest(..., callData)")]),t._v("时，呼叫数据被传达给链外的Airnode，Airnode使用OIS映射，将呼叫数据转化为适合API操作的有效HTTP请求。")]),t._v(" "),e("p",[t._v("将 API 集成到 Airnode，唯一需要做的就是在 Airnode 的 config.json 文件中创建一个 OIS 对象。 本指南是创建 OIS 对象的指导方法。 OIS 借鉴了 "),e("a",{attrs:{href:"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.3.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("OAS OpenAPI 规范"),e("OutboundLink")],1),t._v("的格式. 如果您有 OAS的经验，适应OIS起来也会很快。")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("OAS")]),t._v(" "),e("p",[t._v("然而，我们不建议在创建OIS对象时参考OAS的经验。 OIS只是借用了OAS的格式化做法。 创建OIS对象所需的一切，都在下列这些文档中。")])]),t._v(" "),e("p",[e("strong",[t._v("使用本指南的小贴士：")])]),t._v(" "),e("ul",[e("li",[t._v("在另一个浏览器窗口中打开"),e("RouterLink",{attrs:{to:"/airnode/v0.6/reference/templates/ois-json.html"}},[t._v("OIS模板")]),t._v("，以便进行跟踪。")],1),t._v(" "),e("li",[t._v("查看Airnode入门教程中的一个"),e("RouterLink",{attrs:{to:"/airnode/v0.6/reference/examples/config-json.html"}},[t._v("Airnode config.json文件")]),t._v("的例子。")],1)]),t._v(" "),e("h2",{attrs:{id:"ois-模板"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ois-模板"}},[t._v("#")]),t._v(" OIS 模板")]),t._v(" "),e("p",[t._v("OIS是一个json对象，作为 ("),e("code",[t._v("ois")]),t._v(") "),e("em",[t._v("键_添加到Airnode的"),e("RouterLink",{attrs:{to:"/airnode/v0.6/reference/templates/config-json.html"}},[t._v("config.json")]),t._v("文件中，有时也被称为_字段")],1),t._v("。 你可以尝试使用"),e("RouterLink",{attrs:{to:"/airnode/v0.6/reference/templates/ois-json.html"}},[t._v("OIS模板")]),t._v("来构建一个OIS，并在以后将其添加到Airnode的config.json文件中。")],1),t._v(" "),e("p",[t._v("在 OIS 模板中，一些字段包含 "),e("code",[t._v("{FILL_*}")]),t._v("。 这意味着添加的值是独立于其他字段的。 另一方面，如果两个字段包含相同的表达式（例如，"),e("code",[t._v("{FILL_OPERATION_PARAMETER_1_NAME}")]),t._v(") ，你必须在其中使用相同的值，因为它们是互相引用的。")]),t._v(" "),e("p",[t._v("OIS使用简化的OAS版本。 这意味着，如果你有要集成的API的OpenAPI规范，你就完成了80%，因为你可以复制粘贴整个部分（但要确保进行必要的修改，以符合OIS的格式）。")]),t._v(" "),e("p",[t._v("本指南将假设在没有要集成的API的OpenAPI规格时开展的操作。")]),t._v(" "),e("h2",{attrs:{id:"第1步-指定ois的定义"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第1步-指定ois的定义"}},[t._v("#")]),t._v(" 第1步：指定OIS的定义")]),t._v(" "),e("p",[t._v("通过向OIS json对象的根目录添加三个描述性字段，开始构建OIS。")]),t._v(" "),e("div",{staticClass:"language-json line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"oisFormat"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1.0.0"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"title"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"myOisTitle"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"version"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0.1.0"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  ...\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("h3",{attrs:{id:"oisformat"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oisformat"}},[t._v("#")]),t._v(" oisFormat")]),t._v(" "),e("p",[t._v("将其保留为 "),e("code",[t._v("1.0.0")]),t._v(", 这是当前的 OIS 格式版本。")]),t._v(" "),e("h3",{attrs:{id:"title"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#title"}},[t._v("#")]),t._v(" title")]),t._v(" "),e("p",[t._v("这是该OIS的唯一标题。 注意，一个Airnode可以配置一个以上的OIS，并使用标题作为OIS的标识符。")]),t._v(" "),e("h3",{attrs:{id:"version"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#version"}},[t._v("#")]),t._v(" version")]),t._v(" "),e("p",[t._v("这是OIS的版本，可以对OIS的集成进行版本控制。 建议使用"),e("a",{attrs:{href:"https://semver.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("semver"),e("OutboundLink")],1),t._v("版本控制 最初的版本可以设置成"),e("code",[t._v("<0.1.0>")]),t._v("。")]),t._v(" "),e("h2",{attrs:{id:"第2步-指定api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第2步-指定api"}},[t._v("#")]),t._v(" 第2步：指定API")]),t._v(" "),e("p",[e("code",[t._v("apiSpecifications")]),t._v("字段用于描述API及其操作。")]),t._v(" "),e("div",{staticClass:"language-json line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"apiSpecifications"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"servers"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("..."),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"paths"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("..."),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"components"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("..."),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("h3",{attrs:{id:"servers"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#servers"}},[t._v("#")]),t._v(" Servers")]),t._v(" "),e("p",[t._v("指定你的API，第一步是在"),e("code",[t._v("apiSpecifications.servers[0].url")]),t._v("字段中输入其_baseUR_。 "),e("code",[t._v("apiSpecifications.servers")]),t._v("数组中只允许有一个对象（即 url）。 如果服务器有多 个元素，则会在转换期间引发警告。 此 baseURL 将适用于所有操作。")]),t._v(" "),e("h4",{attrs:{id:"选择基本-url"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#选择基本-url"}},[t._v("#")]),t._v(" 选择基本 URL")]),t._v(" "),e("p",[t._v("考虑以下完整 URL 来执行返回所有已知令牌的 API 操作。")]),t._v(" "),e("blockquote",[e("p",[t._v("https://www.myapi.com/v1/tokens")])]),t._v(" "),e("p",[t._v("有两种方式解决此问题。")]),t._v(" "),e("blockquote",[e("p",[e("strong",[t._v("baseURL:")]),t._v(" https://www.myapi.com")]),t._v(" "),e("p",[e("strong",[t._v("path:")]),t._v(" /v1/data")])]),t._v(" "),e("p",[t._v("或者")]),t._v(" "),e("blockquote",[e("p",[e("strong",[t._v("baseURL")]),t._v(": https://www.myapi.com/v1")]),t._v(" "),e("p",[e("strong",[t._v("path:")]),t._v(" /data")])]),t._v(" "),e("p",[t._v("因为调用"),e("code",[t._v("baseURL+path")]),t._v("的结果，都是同一个完整的URL。")]),t._v(" "),e("p",[t._v("将baseURL设置为你期望被所有操作共享的完整URL的部分。 从上面的例子来看，建议使用"),e("code",[t._v("https://www.myapi.com")]),t._v("，以备将来在API中添加以"),e("code",[t._v("/v2")]),t._v("开头的额外路径。 正如大家都知道的那样，API集成需要许多主观的选择，而且是艺术多于科学。")]),t._v(" "),e("div",{staticClass:"language-json line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"apiSpecifications"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"servers"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Only one element is allowed in the servers array.")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"url"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://www.myapi.com"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  ...\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("h3",{attrs:{id:"路径"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#路径"}},[t._v("#")]),t._v(" 路径")]),t._v(" "),e("p",[t._v("_paths_字段定义了所有的API操作，很像一个OpenAPI规范文件。")]),t._v(" "),e("p",[e("em",[t._v("什么是API操作？")])]),t._v(" "),e("blockquote",[e("p",[t._v("API操作被指定为一个 "),e("em",[e("strong",[t._v("path")])]),t._v(" 和HTTP _"),e("strong",[t._v("method")]),t._v("_的唯一组合。 "),e("code",[t._v("GET /token/{id}")])])]),t._v(" "),e("h4",{attrs:{id:"操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#操作"}},[t._v("#")]),t._v(" 操作")]),t._v(" "),e("p",[t._v("在下面的例子中， "),e("code",[t._v("GET")]),t._v("指的是一种"),e("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTTP请求方法"),e("OutboundLink")],1),t._v("。 这意味着你可以有另一个API操作，可以使用不同的方法来指定，但路径相同。")]),t._v(" "),e("blockquote",[e("p",[t._v("path: /data")]),t._v(" "),e("p",[t._v("method: GET")])]),t._v(" "),e("blockquote",[e("p",[t._v("path: /data")]),t._v(" "),e("p",[t._v("method: POST")])]),t._v(" "),e("p",[t._v("因此，仅靠路径不足以指定 API 操作，还必须提供方法。 如果需要新路径，则它必须使用自己的方法，在路径中启动一个新对象。 目前 Airnode 仅支持 GET 和 POST 方法。")]),t._v(" "),e("p",[t._v("对于 "),e("RouterLink",{attrs:{to:"/airnode/v0.6/reference/templates/ois-json.html"}},[t._v("OIS 模板")]),t._v("，元素的名称（表示为"),e("code",[t._v("{FILL_PATH}")]),t._v("）应替换为路径（例如"),e("code",[t._v("/data")]),t._v("）。 同样，"),e("code",[t._v("{FILL_METHOD}")]),t._v("应替换为您要集成的操作的方法（例如 "),e("code",[t._v("get")]),t._v(")。 这种方法必须使用小写。")],1),t._v(" "),e("p",[t._v("下面的例子说明了三种操作, "),e("code",[t._v("GET /data")]),t._v(", "),e("code",[t._v("POST /data")]),t._v(", "),e("code",[t._v("GET /tokens")]),t._v(".")]),t._v(" "),e("div",{staticClass:"language-json line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"paths"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"/data"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// path    {FILL_PATH}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"get"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// method  {FILL_METHOD}")]),t._v("\n      ...      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// parameters")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"post"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// method  {FILL_METHOD}")]),t._v("\n      ...      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// parameters")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"/tokens"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// path    {FILL_PATH}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"get"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// method  {FILL_METHOD}")]),t._v("\n      ...      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// parameters")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br")])]),e("h4",{attrs:{id:"参数-操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参数-操作"}},[t._v("#")]),t._v(" 参数 (操作)")]),t._v(" "),e("p",[t._v("在指定 API 操作的路径和方法后，最后一步是指定其参数。 每个参数都是 "),e("code",[t._v("apiSpecifications.paths.{PATH}.{METHOD}.parameters")]),t._v("数组中的一个对象，其中包含字段"),e("code",[t._v("in")]),t._v("和 "),e("code",[t._v("name")]),t._v("。 "),e("code",[t._v("in")]),t._v("告诉参数在 HTTP 请求中的位置，"),e("code",[t._v("name")]),t._v("告诉参数值将被发送的名称。 目前 Airnode 支持以下参数类型，可与"),e("code",[t._v("in")]),t._v("一起使用。")]),t._v(" "),e("ul",[e("li",[t._v("query")]),t._v(" "),e("li",[t._v("header")]),t._v(" "),e("li",[t._v("path")]),t._v(" "),e("li",[t._v("cookie")])]),t._v(" "),e("p",[t._v("集成 POST 方法时，使用"),e("code",[t._v("in: query")]),t._v("定义body参数。 Airnode 会将所有"),e("code",[t._v("query")]),t._v(" 类型转换为 "),e("code",[t._v("requestBody")]),t._v("。 请注意，仅支持非嵌套的 application/json 内容类型。")]),t._v(" "),e("p",[t._v("不必指定所有 API 操作参数，只需指定链上请求者需要的、能够提供的参数（请参阅 Airnode 端点"),e("RouterLink",{attrs:{to:"/airnode/v0.6/grp-providers/guides/build-an-airnode/api-integration.html#parameters"}},[t._v("参数")]),t._v("），以及您要为其硬编码值的参数（请参阅 Airnode 端点"),e("RouterLink",{attrs:{to:"/airnode/v0.6/grp-providers/guides/build-an-airnode/api-integration.html#fixedoperationparameters"}},[t._v("固定操作参数")]),t._v("）。")],1),t._v(" "),e("div",{staticClass:"language-json line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"paths"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"/data/{id}"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"get"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"parameters"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"in"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"path"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"id"')]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"in"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"header"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Accept"')]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br")])]),e("p",[e("em",[t._v("Example: 获取代币")])]),t._v(" "),e("p",[e("code",[t._v("GET /token/{id}")]),t._v(" 函数使用作为"),e("code",[t._v("path")]),t._v(" 参数的代币"),e("code",[t._v("id")]),t._v(" ，返回一个代币。")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Method")]),t._v(" "),e("th",[t._v("Path")]),t._v(" "),e("th",[t._v("in")]),t._v(" "),e("th",[t._v("name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("GET")]),t._v(" "),e("td",[t._v("/token/{id}")]),t._v(" "),e("td",[t._v("path")]),t._v(" "),e("td",[t._v("id")])])])]),t._v(" "),e("p",[e("em",[t._v("示例：创建代币")])]),t._v(" "),e("p",[e("code",[t._v("POST /token")]),t._v(" 操作可以接受三个参数。 代币的名称和描述放在类型"),e("code",[t._v("query")]),t._v(" 中，并在调用 API 操作时由 Airnode 移动到 requestBody。 第三个是"),e("code",[t._v("header")]),t._v("参数，描述请求的Content-Type，例如"),e("code",[t._v("application/json")]),t._v("或者 "),e("code",[t._v("application/x-www-form-urlencoded")]),t._v("。")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Method")]),t._v(" "),e("th",[t._v("Path")]),t._v(" "),e("th",[t._v("in")]),t._v(" "),e("th",[t._v("name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("POST")]),t._v(" "),e("td",[t._v("/token")]),t._v(" "),e("td",[t._v("query")]),t._v(" "),e("td",[t._v("name")])]),t._v(" "),e("tr",[e("td"),t._v(" "),e("td"),t._v(" "),e("td",[t._v("query")]),t._v(" "),e("td",[t._v("description")])]),t._v(" "),e("tr",[e("td"),t._v(" "),e("td"),t._v(" "),e("td",[t._v("header")]),t._v(" "),e("td",[t._v("Accept")])])])]),t._v(" "),e("p",[e("em",[t._v("示例：获取所有代币")])]),t._v(" "),e("p",[e("code",[t._v("GET /tokens")]),t._v(" 返回所有代币的列表。 列表计数可以使用 API 操作认为是可选的 `limit' 参数来限制，因为如果省略它不会返回错误。")]),t._v(" "),e("blockquote",[e("p",[e("code",[t._v("GET /tokens")]),t._v(" 返回所有代币。")]),t._v(" "),e("p",[e("code",[t._v("GET /tokens?limit=10")]),t._v(" 返回前10个代币。")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Method")]),t._v(" "),e("th",[t._v("Path")]),t._v(" "),e("th",[t._v("in")]),t._v(" "),e("th",[t._v("name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("GET")]),t._v(" "),e("td",[t._v("/token")]),t._v(" "),e("td",[t._v("query")]),t._v(" "),e("td",[t._v("limit")])])])]),t._v(" "),e("h2",{attrs:{id:"第-3-步-指定-airnode-端点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第-3-步-指定-airnode-端点"}},[t._v("#")]),t._v(" 第 3 步：指定 Airnode 端点")]),t._v(" "),e("p",[t._v("Airnode 端点是 Airnode 向链上请求者公开的服务。 它映射到 API 操作，但这种映射的性质是可定制的。 集成者的工作就是定义这个服务是什么。")]),t._v(" "),e("p",[t._v("例如，如果您的 API 操作根据其代码（例如 "),e("code",[t._v("BTC")]),t._v("）返回资产价格，您可以指定端点，以便请求者将代码作为参数提供。 由此产生的端点将是一个通用的端点，可以返回任何种类资产的价格。 另一方面，您可以将 "),e("code",[t._v("BTC")]),t._v(" 硬编码为将返回其价格的资产（使用"),e("RouterLink",{attrs:{to:"/airnode/v0.6/grp-providers/guides/build-an-airnode/api-integration.html#fixedoperationparameters"}},[t._v("固定操作参数")]),t._v("），这将使你的端点成为一个特定的端点，只返回BTC的价格。")],1),t._v(" "),e("p",[t._v("推荐的端点定义模式是为每个API操作创建一个Airnode端点，并允许请求者自己提供所有操作参数。 这将带来最佳的灵活性，并从本质上允许请求者在链上使用完整的API功能。 通常情况下，预言机集成会努力对尽可能多的API参数进行硬编码，因为在链上传递这些参数会产生gas 成本开销。 然而，Airnode协议使用"),e("RouterLink",{attrs:{to:"/airnode/v0.6/concepts/template.html"}},[t._v("模板")]),t._v("（不要与本指南使用的OIS模板相混淆），它允许请求者在没有额外gas 成本的情况下，指定大量的端点参数。")],1),t._v(" "),e("p",[t._v("请注意，在某些情况下，你可能不希望将端点与API操作一一对应。 例如，一个API操作可以有一个"),e("code",[t._v("header")]),t._v(" 参数："),e("code",[t._v("Accept")]),t._v(", 它可以取值为 "),e("code",[t._v("application/json")]),t._v("或 "),e("code",[t._v("applicatino/xml")]),t._v("，以确定如何格式化API将响应调用的数据。 Airnode期望响应为"),e("code",[t._v("JSON")]),t._v("格式的，因此将这个参数硬编码为JSON比让请求者决定更合适，因为只有一个有效的选择。 同样，集成商的工作就是要意识到这些微妙之处，并做出判断。")]),t._v(" "),e("p",[t._v("在这个简短的迂回之后，让我们回到填写我们的OIS模板上。")]),t._v(" "),e("h3",{attrs:{id:"端点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#端点"}},[t._v("#")]),t._v(" 端点")]),t._v(" "),e("p",[t._v("字段 "),e("code",[t._v("endpoints")]),t._v("是一个数组，每一行代表一个 Airnode 端点。 您需要填写的第一个字段是 "),e("code",[t._v("name")]),t._v("。 确保它是描述性的并且与其他端点名称不同。 如果您将 API 操作一对一地集成到 Airnode 端点，使用 API 操作路径作为端点名称是一个不错的选择（即"),e("code",[t._v("/token")]),t._v("）。 请注意， 如果对单个路径（即"),e("code",[t._v("GET/token")]),t._v("）有多个使用不同方法的操作，您也可以将方法添加到此名称中。")]),t._v(" "),e("p",[t._v("下一步是填写"),e("code",[t._v("operation")]),t._v(" 对象 。 在这里，您需要输入您在 "),e("code",[t._v("apiSpecifications.paths")]),t._v(",中定义的 API 操作"),e("code",[t._v("path")]),t._v(" 和"),e("code",[t._v("method")]),t._v("， 从而导致 Airnode 端点调用现在链接的 API 操作。")]),t._v(" "),e("h4",{attrs:{id:"fixedoperationparameters"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fixedoperationparameters"}},[t._v("#")]),t._v(" fixedOperationParameters")]),t._v(" "),e("p",[t._v("硬编码 API 参数并不少见（回想一下上面示例中的"),e("code",[t._v("Accept")]),t._v("操作参数）。 这种硬编码的参数称为"),e("code",[t._v("fixedOperationParameters")]),t._v("。")]),t._v(" "),e("p",[t._v("OIS模板中"),e("code",[t._v("endpoints[n].fixedOperationParameters")]),t._v("下有一个固定的操作参数，指的是第一个API操作参数。 这意味着，每当 Airnode 收到对该端点的请求时，都会使用设置为 "),e("code",{staticStyle:{"overflow-wrap":"break-word"}},[t._v("endpoints[n].fixedOperationParameters[n].value ")]),t._v("的 API 操作参数进行相应的 API 调用。 请求者不提供"),e("code",[t._v("fixedOperationParameters")]),t._v("的值。")]),t._v(" "),e("p",[t._v("一个 Airnode 端点可以有多个"),e("code",[t._v("fixedOperationParameters")]),t._v("。 API 操作参数不能同时存在于 "),e("code",[t._v("endpoints[n].fixedOperationParameters")]),t._v(" 和"),e("code",[t._v("endpoints[n].parameters")]),t._v(".。")]),t._v(" "),e("h4",{attrs:{id:"reservedparameters"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#reservedparameters"}},[t._v("#")]),t._v(" reservedParameters")]),t._v(" "),e("p",[t._v("请求者可以提供一些未映射到 API 操作参数的参数。 这些参数被称为“保留参数”，他们的名称 以下划线开头。 有关更多信息，请参阅"),e("RouterLink",{attrs:{to:"/ois/v1.0.0/ois.html#_5-4-reservedparameters"}},[t._v("相关的 OIS 文档")]),t._v("。")],1),t._v(" "),e("p",[t._v("当前的保留参数列表是"),e("code",[t._v("_type")]),t._v(", "),e("code",[t._v("_path")]),t._v(" 和 "),e("code",[t._v("_times")]),t._v("。 请参阅 OIS 文档集中的"),e("RouterLink",{attrs:{to:"/ois/v1.0.0/reserved-parameters.html"}},[t._v("保留参数")]),t._v("以了解每个参数的用途。 在大多数情况下，所有三个都应定义为没有固定/默认值的保留参数，因为这样做为请求者提供了最大的灵活性。")],1),t._v(" "),e("h4",{attrs:{id:"parameters"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#parameters"}},[t._v("#")]),t._v(" parameters")]),t._v(" "),e("p",[t._v("Airnode端点参数，映射到允许请求者提供值的API操作参数。 它通过其字段"),e("code",[t._v("operationParameter")]),t._v("指代API操作。 你也可以为端点参数提供 "),e("code",[t._v("default")]),t._v(" ，但在大多数情况下不建议这样做。")]),t._v(" "),e("p",[t._v("端点参数有一个 "),e("code",[t._v("name")]),t._v("字段，它不一定与其所映射的API操作参数相同。 作为一个单独的说明，一个Airnode端点可以有多个参数。")]),t._v(" "),e("h2",{attrs:{id:"结论"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#结论"}},[t._v("#")]),t._v(" 结论")]),t._v(" "),e("p",[t._v("现在，API操作和Airnode端点已被指定。 每个Airnode端点映射到一个API操作，每个Airnode端点参数或fixedOperationParameter映射到一个API操作参数。 由此产生的OIS不包括特定于用户的信息，这意味着你可以分享它，让其他人轻松地提供相同的服务（例如，建立一个第三方预言机网络）。")]),t._v(" "),e("p",[t._v("请注意，在定义Airnode端点的时候，存在一些主观性。 这意味着对于相同的 API，可以存在两个不同的 OIS，根据集成商如何设计请求者将使用的接口而有所不同。 然而，在大多数情况下，我们只需将API操作直接映射到Airnode端点，并让请求者通过Airnode端点参数提供所有API操作参数。")]),t._v(" "),e("p",[t._v("现在你已经设置好了OIS对象，下一步就是"),e("RouterLink",{attrs:{to:"/airnode/v0.6/grp-providers/guides/build-an-airnode/api-security.html"}},[t._v("Airnode安全性")]),t._v("。")],1)],1)}),[],!1,null,null,null);s.default=r.exports},603:function(t,s,a){t.exports=a.p+"assets/img/api-integration-ois.a9073315.png"}}]);