(window.webpackJsonp=window.webpackJsonp||[]).push([[379],{1017:function(t,e,n){"use strict";n.r(e);var r=n(15),a=Object(r.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("TitleSpan",[t._v("API供应商")]),t._v(" "),n("h1",{attrs:{id:"frontmatter-title"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#frontmatter-title"}},[t._v("#")]),t._v(" "+t._s(t.$frontmatter.title))]),t._v(" "),n("VersionWarning"),t._v(" "),n("TOC",{staticClass:"table-of-contents",attrs:{"include-level":[2,3]}}),t._v(" "),n("p",[t._v("预言机节点需要访问区块链（例如，以太坊）节点来监听请求事件，并发送交易来满足请求。 Airnode 模型旨在尽可能减少使用托管服务的节点操作工作。 因此，假设典型用户将使用以太坊供应商，例如 Infura、Alchemy 等。 这些服务的种类只会越来越多，因此根据这些服务设计的解决方案，预计不会在未来造成问题。 此外，在这些以太坊供应商中，Infura 每天免费提供 100,000 次调用。 没有收到任何请求的预言机，每天的调用次数将少于 3,000 次（每分钟 2 次调用），这允许用户免费保持预言机在线，并在获得支持后升级到付费计划。")]),t._v(" "),n("p",[t._v("尽管假设用户将使用以太坊供应商，但提供商没有理由不能使用私有以太坊节点。 此外，Airnode 旨在允许同时使用多个以太坊供应商。 这是通过单独处理所有集成供应商来实现的。 因此，除非所有供应商都是恶意的，否则Airnode的运行不能被彻底地破坏。 因此，与使用私有以太坊节点相比，使用多个以太坊供应商，是实现最佳可用性的更好策略。")])],1)}),[],!1,null,null,null);e.default=a.exports}}]);