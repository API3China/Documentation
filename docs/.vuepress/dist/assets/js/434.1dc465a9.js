(window.webpackJsonp=window.webpackJsonp||[]).push([[434],{1085:function(e,t,a){"use strict";a.r(t);var n=a(15),o=Object(n.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("TitleSpan",[e._v("Reference")]),e._v(" "),a("h1",{attrs:{id:"frontmatter-title"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#frontmatter-title"}},[e._v("#")]),e._v(" "+e._s(e.$frontmatter.title))]),e._v(" "),a("VersionWarning"),e._v(" "),a("TocHeader"),e._v(" "),a("TOC",{staticClass:"table-of-contents",attrs:{"include-level":[2,3]}}),e._v(" "),a("p",[e._v("When accessing a Beacon's value with the "),a("RouterLink",{attrs:{to:"/beacon/v0.1/functions/read-beacon.html"}},[e._v("readBeacon()")]),e._v(" function only the "),a("code",[e._v("beaconId")]),e._v(" is needed by the caller to access its value. The use of a "),a("code",[e._v("templateId")]),e._v(" is only required when there is a need to update a Beacon value. Usually this is called by the Beacon itself and is "),a("strong",[e._v("not")]),e._v(" a normal operational procedure a Beacon consumer needs to concern themselves with.")],1),e._v(" "),a("p",[e._v("A Beacon will update itself when an allowed deviation of its current value is met. Behind every Beacon there is a single template. Additionally, behind every Beacon template there is an Airnode which returns the Beacon's value from an API endpoint. The template contains the parameters used by Airnode when calling the API endpoint. Additional Beacon parameters may be required to merge with the template for the Airnode to call an API endpoint. This entire process is completed using the function "),a("RouterLink",{attrs:{to:"/beacon/v0.1/functions/request-beacon-update.html"}},[e._v("requestBeaconUpdate()")]),e._v(".")],1),e._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),a("p",[e._v("Useless you intent to ask the Beacon to update itself, outside of its normal update process, the use of a Beacon's template will be of no concern. However to update a Beacon manually a requester will need the templateId of the Beacon when calling the "),a("RouterLink",{attrs:{to:"/beacon/v0.1/functions/request-beacon-update.html"}},[e._v("requestBeaconUpdate()")]),e._v(" function.")],1)]),e._v(" "),a("h2",{attrs:{id:"deriving-ids"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deriving-ids"}},[e._v("#")]),e._v(" Deriving IDs")]),e._v(" "),a("p",[e._v("Create a "),a("code",[e._v("templateId")]),e._v(" by hashing the Airnode address, the endpointId and the parameters of the template. See the "),a("a",{attrs:{href:"https://github.com/api3dao/airnode/blob/master/packages/airnode-protocol/contracts/rrp/TemplateUtils.sol#L17-L46",target:"_blank",rel:"noopener noreferrer"}},[e._v("createTemplate()"),a("OutboundLink")],1),e._v(" function in the monorepo.")]),e._v(" "),a("p",[e._v("Create a "),a("code",[e._v("beaconId")]),e._v(" by hashing the "),a("code",[e._v("templateId")]),e._v(" and the Beacon parameters. See the "),a("a",{attrs:{href:"https://github.com/api3dao/airnode/blob/master/packages/airnode-protocol/contracts/rrp/requesters/RrpBeaconServer.sol#L213",target:"_blank",rel:"noopener noreferrer"}},[e._v("requestBeaconUpdate()"),a("OutboundLink")],1),e._v(" function in the monorepo.")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("templateId")]),e._v(" cannot be derived from the "),a("code",[e._v("beaconId")]),e._v(".")])],1)}),[],!1,null,null,null);t.default=o.exports}}]);