(window.webpackJsonp=window.webpackJsonp||[]).push([[454],{1104:function(t,e,a){"use strict";a.r(e);var s=a(15),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"frontmatter-title"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#frontmatter-title"}},[t._v("#")]),t._v(" "+t._s(t.$frontmatter.title))]),t._v(" "),a("TocHeader"),t._v(" "),a("TOC",{staticClass:"table-of-contents",attrs:{"include-level":[2,3]}}),t._v(" "),a("p",[t._v("API3池合约是API3代币持有者可以将他们的代币质押以获得DAO的投票权。 质押者获得API3代币的奖励，并可以选择将他们的投票权委托给另一个用户。")]),t._v(" "),a("p",[t._v("::: 提示")]),t._v(" "),a("p",[t._v("DAO池合约也将被用来从DAO池中支付保险索赔。 这个功能到目前为止还没有实现。")]),t._v(" "),a("p",[t._v(":::")]),t._v(" "),a("p",[t._v("查看 "),a("a",{attrs:{href:"https://github.com/api3dao/api3-dao/tree/main/packages/pool/contracts",target:"_blank",rel:"noopener noreferrer"}},[t._v("API3Pool.sol"),a("OutboundLink")],1),t._v(" 合约代码，以了解合约的遗传结构。")]),t._v(" "),a("ul",[a("li",[t._v("TimelockUtils.sol")]),t._v(" "),a("li",[t._v("ClaimUtils.sol")]),t._v(" "),a("li",[t._v("StakeUtils.sol")]),t._v(" "),a("li",[t._v("TransferUtils.sol")]),t._v(" "),a("li",[t._v("DelegationUtils.sol")]),t._v(" "),a("li",[t._v("RewardUtils.sol")]),t._v(" "),a("li",[t._v("Getterutils.sol")]),t._v(" "),a("li",[t._v("StateUtils.sol")])]),t._v(" "),a("h2",{attrs:{id:"关键函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关键函数"}},[t._v("#")]),t._v(" 关键函数")]),t._v(" "),a("h3",{attrs:{id:"存入、质押、解除质押和提币"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#存入、质押、解除质押和提币"}},[t._v("#")]),t._v(" 存入、质押、解除质押和提币")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("签名")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("depositRegular(uint256 amount)")])]),t._v(" "),a("td",[t._v("将您的 API3 代币存入池中。 代币必须先存入才能质押。")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("stake(uint256 amount)")])]),t._v(" "),a("td",[t._v("质押存入的API3代币。 质押的代币将获得奖励，授予投票权(如果在池子中有尚未执行的claim，则投票权可能会被取消)。")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("depositAndStake(address source, uint256 amount)")])]),t._v(" "),a("td",[t._v("在一个交易中存入并质押API3代币。")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("scheduleUnstake(uint256 shares)")])]),t._v(" "),a("td",[t._v("计划解除质押的代币。 为了解除API3代币的质押，成员必须先操作解除质押，并在代币解锁前等待预定的时间（目前是1周时间）。 操作解除质押的代币不再授予投票权或获得奖励。")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("unstake(address userAddress) returns(uint256)")])]),t._v(" "),a("td",[t._v("API3代币解锁后，允许它们从池中提币（解锁和提币是不同的步骤）。 只有在操作解除质押并等待预定的时间后才能调用。")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("withdrawRegular(uint256 amount)")])]),t._v(" "),a("td",[t._v("从池合约中取出您的 API3 代币。")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("unstakeAndWithdraw(address destination)")])]),t._v(" "),a("td",[t._v("在一个交易中解锁并提币。")])])])]),t._v(" "),a("h3",{attrs:{id:"时间锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#时间锁"}},[t._v("#")]),t._v(" 时间锁")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("签名")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("function deposit(address source, uint256 amount, address userAddress)")])]),t._v(" "),a("td",[t._v("只能由 Timelock Manager 合约来调用。 为用户存入代币。")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("function depositWithVesting(address source, uint256 amount, address userAddress, uint256 releaseStart, uint256 releaseEnd)")])]),t._v(" "),a("td",[t._v("只能由 Timelock Manager 合约来调用。 为用户按归属时间表存入代币。 这些存入的代币在归属之前不能被用户提取，但它们_可以_ 被质押。")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("function updateTimelockStatus(address userAddress, address timelockManagerAddress)")])]),t._v(" "),a("td",[t._v("根据Timelock Manager合约中的时间表，更新用户存入的归属代币的归属状态（比如 解锁的代币）。")])])])]),t._v(" "),a("h3",{attrs:{id:"投票权"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#投票权"}},[t._v("#")]),t._v(" 投票权")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("签名")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("userVotingPowerAt(address userAddress, uint256 _block)")])]),t._v(" "),a("td",[t._v("返回用户当前的投票能量(如果他们已经被委托投票权，0)。")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("delegateVotingPower(address delegate)")])]),t._v(" "),a("td",[t._v("将一个成员的投票权委托转让给另一个地址，这是由他们在质押池中的份额决定的。 在转让到新地址之前，无需取消投票权。")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("undelegateVotingPower()")])]),t._v(" "),a("td",[t._v("取消委托成员的投票权。")])])])]),t._v(" "),a("h3",{attrs:{id:"其他"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[t._v("#")]),t._v(" 其他")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("签名")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("mintReward()")])]),t._v(" "),a("td",[t._v("将新的 API3 代币分发到质押池中，成员们可以在质押池中根据自己的份额解除质押和提币")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("payOutClaim(address recipient, uint256 amount)")])]),t._v(" "),a("td",[t._v("仅可由经批准的claims manager合约才能调用的特殊功能，直接从质押池中支付索偿（claim）要求。")])])])])],1)}),[],!1,null,null,null);e.default=r.exports}}]);