(window.webpackJsonp=window.webpackJsonp||[]).push([[101],{578:function(e,t,s){e.exports=s.p+"assets/img/config-json.3756aef8.png"},960:function(e,t,s){"use strict";s.r(t);var a=s(15),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("TitleSpan",[e._v("Build an Airnode")]),e._v(" "),a("h1",{attrs:{id:"frontmatter-title"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#frontmatter-title"}},[e._v("#")]),e._v(" "+e._s(e.$frontmatter.title))]),e._v(" "),a("VersionWarning"),e._v(" "),a("TocHeader"),e._v(" "),a("TOC",{staticClass:"table-of-contents",attrs:{"include-level":[2,5]}}),e._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("Complete the following before configuring your Airnode.")]),e._v(" "),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/airnode/v0.5/grp-providers/guides/build-an-airnode/api-integration.html"}},[e._v("API Integration")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/airnode/v0.5/grp-providers/guides/build-an-airnode/api-security.html"}},[e._v("API Security")])],1)]),e._v(" "),a("p",[a("RouterLink",{attrs:{to:"/airnode/v0.5/reference/deployment-files/config-json.html"}},[a("InfoBtnGreen")],1),e._v(" This icon links to additional field information in the reference section.")],1)]),e._v(" "),a("p",[e._v("An Airnode is deployed or redeployed using configuration values from its "),a("code",[e._v("config.json")]),e._v(" and "),a("code",[e._v("secrets.env")]),e._v(" files. The "),a("code",[e._v("config.json")]),e._v(" specifies the "),a("RouterLink",{attrs:{to:"/ois/v1.0.0/ois.html"}},[e._v("Oracle Integration Specifications OIS")]),e._v(" and other specific configuration details. The "),a("code",[e._v("secrets.env")]),e._v(" file holds secrets, such as API keys and chain provider URLs, which are referenced within the config.json file using interpolation.")],1),e._v(" "),a("blockquote",[a("p",[a("img",{attrs:{src:s(578),alt:"config-json"}})]),e._v(" "),a("ul",[a("li",[a("p",{staticClass:"diagram-line"},[e._v("The "),a("b",[e._v("config.json")]),e._v(" file is used during the deployment/redeployment of an Airnode to configure its behavior and to provide mappings of API operations.")])]),e._v(" "),a("li",[a("p",{staticClass:"diagram-line"},[e._v("The "),a("b",[e._v("secrets.env")]),e._v(" file holds values for config.json that must be kept secret.")])]),e._v(" "),a("li",[a("p",{staticClass:"diagram-line"},[e._v("The "),a("b",[e._v("aws.env")]),e._v(" file holds AWS credentials for deployments targeted to AWS.")])]),e._v(" "),a("li",[a("p",{staticClass:"diagram-line"},[e._v("The "),a("b",[e._v("gcp.json")]),e._v(" file holds GCP credentials for deployments targeted to GCP.")])])])]),e._v(" "),a("p",[e._v("The following example files are useful while reading this doc.")]),e._v(" "),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/airnode/v0.5/reference/examples/config-json.html"}},[e._v("config.json")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/airnode/v0.5/reference/examples/secrets-env.html"}},[e._v("secrets.env")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/airnode/v0.5/reference/examples/aws-env.html"}},[e._v("aws.env")])],1)]),e._v(" "),a("h2",{attrs:{id:"creating-config-json"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#creating-config-json"}},[e._v("#")]),e._v(" Creating "),a("code",[e._v("config.json")])]),e._v(" "),a("p",[e._v("Use the "),a("RouterLink",{attrs:{to:"/airnode/v0.5/reference/templates/config-json.html"}},[e._v("config.json template")]),e._v(" to build your own Airnode configuration file or alter the "),a("RouterLink",{attrs:{to:"/airnode/v0.5/reference/examples/config-json.html"}},[e._v("config.json example")]),e._v(" file. There are five root level fields in "),a("code",[e._v("config.json")]),e._v(".")],1),e._v(" "),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/airnode/v0.5/grp-providers/guides/build-an-airnode/configuring-airnode.html#chains"}},[e._v("chains")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/airnode/v0.5/grp-providers/guides/build-an-airnode/configuring-airnode.html#nodesettings"}},[e._v("nodeSettings")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/airnode/v0.5/grp-providers/guides/build-an-airnode/configuring-airnode.html#triggers"}},[e._v("triggers")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/airnode/v0.5/grp-providers/guides/build-an-airnode/configuring-airnode.html#ois"}},[e._v("ois")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/airnode/v0.5/grp-providers/guides/build-an-airnode/configuring-airnode.html#apicredentials"}},[e._v("apiCredentials")])],1)]),e._v(" "),a("h3",{attrs:{id:"chains"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#chains"}},[e._v("#")]),e._v(" chains")]),e._v(" "),a("p",[e._v("Each row in the "),a("code",[e._v("chains")]),e._v(" array represents an Ethereum blockchain the Airnode will serve as identified by the "),a("code",[e._v("id")]),e._v(". Currently Airnode only supports Ethereum blockchains as denoted by "),a("code",[e._v('type: "evm"')]),e._v(". There are several supported blockchains, see them in the "),a("RouterLink",{attrs:{to:"/airnode/v0.5/reference/airnode-addresses.html"}},[e._v("Airnode contract addresses")]),e._v(" doc. You can use multiple chain providers for each chain and declare multiple chains each with one of more chain providers. See "),a("RouterLink",{attrs:{to:"/airnode/v0.5/concepts/chain-providers.html"}},[e._v("Chains Providers")]),e._v(" in "),a("em",[e._v("Concepts and Definitions")]),e._v(".")],1),e._v(" "),a("p",[e._v("Below is a simple chain array with a single chain provider.")]),e._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"chains"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"maxConcurrency"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"authorizers"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"0x5Fgh48...3F6f64180acc"')]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"contracts"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"AirnodeRrp"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"0xF6d267546...BC9A384fa418"')]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"4"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"options"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"txType"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"eip1559"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"priorityFee"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"value"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("3.12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"unit"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"gwei"')]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"baseFeeMultiplier"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"providers"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"infura_rinkeby"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"url"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"${INFURA_RINKEBY_PROVIDER_URL}"')]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"evm"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"blockHistoryLimit"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("300")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"minConfirmations"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"ignoreBlockedRequestsAfterBlocks"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("20")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br"),a("span",{staticClass:"line-number"},[e._v("17")]),a("br"),a("span",{staticClass:"line-number"},[e._v("18")]),a("br"),a("span",{staticClass:"line-number"},[e._v("19")]),a("br"),a("span",{staticClass:"line-number"},[e._v("20")]),a("br"),a("span",{staticClass:"line-number"},[e._v("21")]),a("br"),a("span",{staticClass:"line-number"},[e._v("22")]),a("br"),a("span",{staticClass:"line-number"},[e._v("23")]),a("br"),a("span",{staticClass:"line-number"},[e._v("24")]),a("br"),a("span",{staticClass:"line-number"},[e._v("25")]),a("br"),a("span",{staticClass:"line-number"},[e._v("26")]),a("br"),a("span",{staticClass:"line-number"},[e._v("27")]),a("br"),a("span",{staticClass:"line-number"},[e._v("28")]),a("br"),a("span",{staticClass:"line-number"},[e._v("29")]),a("br")])]),a("h4",{attrs:{id:"maxconcurrency"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#maxconcurrency"}},[e._v("#")]),e._v(" maxConcurrency")]),e._v(" "),a("p",[a("RouterLink",{attrs:{to:"/airnode/v0.5/reference/deployment-files/config-json.html#maxconcurrency"}},[a("InfoBtnGreen")],1),e._v(" Airnode is designed to scale well with the number of requests made. To accomplish this, it spawns new cloud functions (called handlers) when necessary and these handlers run in parallel.")],1),e._v(" "),a("p",[e._v("The maximum concurrency specifies the maximum number of concurrent handler calls per single Airnode invocation. Airnode is reserving ("),a("a",{attrs:{href:"https://docs.aws.amazon.com/lambda/latest/operatorguide/reserved-concurrency.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("AWS"),a("OutboundLink")],1),e._v(") and limiting ("),a("a",{attrs:{href:"https://docs.aws.amazon.com/lambda/latest/operatorguide/reserved-concurrency.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("AWS"),a("OutboundLink")],1),e._v(", "),a("a",{attrs:{href:"https://cloud.google.com/functions/docs/configuring/max-instances",target:"_blank",rel:"noopener noreferrer"}},[e._v("GCP"),a("OutboundLink")],1),e._v(") the number of spawned cloud functions based on this field. If you want to disable this behavior, take a look at the "),a("code",[e._v("disableConcurrencyReservations")]),e._v(" field in the "),a("a",{attrs:{href:"#cloudprovider"}},[e._v("cloudProvider")]),e._v(" section.")]),e._v(" "),a("p",[e._v("If you set this field to value X, then Airnode will guarantee that:")]),e._v(" "),a("ul",[a("li",[e._v("At most X api calls are made to the API")]),e._v(" "),a("li",[e._v("At most X transactions (made by blockchain providers) will be made by the blockchain providers of the respective chain")])]),e._v(" "),a("p",[e._v("When doing this, Airnode will calculate the total number of requests reported by all blockchain providers. If this number exceeds the maximum concurrency limit it will start dropping the latest requests from the blockchain provider with the maximum number of requests until the number of them is under the limit.")]),e._v(" "),a("p",[e._v("For example, if "),a("code",[e._v("maxConcurrency")]),e._v(" set to 5 and there are three providers (A, B and C) and they reported the following requests:")]),e._v(" "),a("ul",[a("li",[e._v("A1, A2, A3, A4 and A5")]),e._v(" "),a("li",[e._v("B1, B2 and B3")]),e._v(" "),a("li",[e._v("C1 and C2")])]),e._v(" "),a("p",[e._v("The above example results in the following requests: A1, A2, B1, B2 and C2. Note that neither of the providers has more than 2 requests, but this is still not enough to meet the limit so request C2 is dropped as well.")]),e._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),a("p",[e._v("Note, that this limit only applies to the requests initiated on chain. For example, requests initiated using HTTP gateway are not included in this limit.")]),e._v(" "),a("p",[e._v("Also note that, this limit is configured per chain and the limits of different chains are unrelated to each other.")])]),e._v(" "),a("h4",{attrs:{id:"authorizers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#authorizers"}},[e._v("#")]),e._v(" authorizers")]),e._v(" "),a("p",[a("RouterLink",{attrs:{to:"/airnode/v0.5/reference/deployment-files/config-json.html#authorizers"}},[a("InfoBtnGreen")],1),e._v(" The list of authorizer contract addresses the Airnode deployment will set on-chain. See the "),a("RouterLink",{attrs:{to:"/airnode/v0.5/concepts/authorization.html"}},[e._v("Authorization")]),e._v(" doc for more information.")],1),e._v(" "),a("h4",{attrs:{id:"contracts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#contracts"}},[e._v("#")]),e._v(" contracts")]),e._v(" "),a("p",[a("RouterLink",{attrs:{to:"/airnode/v0.5/reference/deployment-files/config-json.html#contracts"}},[a("InfoBtnGreen")],1),e._v(" Contains the addresses of the contracts that implement the Airnode protocols. Although you can deploy these contracts yourself, you are recommended to use the ones that were deployed by API3. You can find them in the list above.")],1),e._v(" "),a("h4",{attrs:{id:"id"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#id"}},[e._v("#")]),e._v(" id")]),e._v(" "),a("p",[a("RouterLink",{attrs:{to:"/airnode/v0.5/reference/deployment-files/config-json.html#id"}},[a("InfoBtnGreen")],1),e._v(" An Airnode can serve multiple chains simultaneously. Set the ID of the desired chain in "),a("code",[e._v("id")]),e._v(" (e.g., "),a("code",[e._v("4")]),e._v(" for Rinkeby test network). See the list of supported chains in the "),a("RouterLink",{attrs:{to:"/airnode/v0.5/reference/airnode-addresses.html"}},[e._v("Airnode Contract Addresses")]),e._v(" doc. See additional definition in the "),a("RouterLink",{attrs:{to:"/airnode/v0.5/reference/deployment-files/config-json.html#id"}},[e._v("reference section")]),e._v(".")],1),e._v(" "),a("h4",{attrs:{id:"providers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#providers"}},[e._v("#")]),e._v(" providers")]),e._v(" "),a("p",[a("RouterLink",{attrs:{to:"/airnode/v0.5/reference/deployment-files/config-json.html#providers"}},[a("InfoBtnGreen")],1),e._v(" Airnode can use multiple Ethereum providers per chain. These could be a private Ethereum node, or an Ethereum service provider such as Infura. Accordingly, the "),a("code",[e._v("providers")]),e._v(" field is a list which allows for multiple Ethereum providers. Enter a user defined "),a("code",[e._v("name")]),e._v(" which identifies the provider and the provider URL which usually is kept in the "),a("code",[e._v("secrets.env")]),e._v(" file. The name is used in logs.")],1),e._v(" "),a("h4",{attrs:{id:"type"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#type"}},[e._v("#")]),e._v(" type")]),e._v(" "),a("p",[a("RouterLink",{attrs:{to:"/airnode/v0.5/reference/deployment-files/config-json.html#type"}},[a("InfoBtnGreen")],1),e._v(" The type of the chain. Only "),a("code",[e._v("evm")]),e._v(" is supported at this time. See additional definition in the "),a("RouterLink",{attrs:{to:"/airnode/v0.5/reference/deployment-files/config-json.html#type"}},[e._v("reference section")]),e._v(".")],1),e._v(" "),a("h4",{attrs:{id:"options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options"}},[e._v("#")]),e._v(" options")]),e._v(" "),a("p",[a("RouterLink",{attrs:{to:"/airnode/v0.5/reference/deployment-files/config-json.html#options"}},[a("InfoBtnGreen")],1),e._v(" An object that configures chain-related options.")],1),e._v(" "),a("ul",[a("li",[e._v("txType: The transaction type to use.")]),e._v(" "),a("li",[e._v("priorityFee: An object that configures the EIP-1559 Priority Fee.")]),e._v(" "),a("li",[e._v("baseFeeMultiplier: Configures the EIP-1559 Base Fee to Maximum Fee Multiplier.")])]),e._v(" "),a("h4",{attrs:{id:"blockhistorylimit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#blockhistorylimit"}},[e._v("#")]),e._v(" blockHistoryLimit")]),e._v(" "),a("p",[a("RouterLink",{attrs:{to:"/airnode/v0.5/reference/deployment-files/config-json.html#blockhistorylimit"}},[a("InfoBtnGreen")],1),e._v(" The number of blocks in the past that the Airnode deployment should search for requests. Defaults to "),a("code",[e._v("300")]),e._v(" (roughly 1 hour for Ethereum).")],1),e._v(" "),a("h4",{attrs:{id:"minconfirmations"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#minconfirmations"}},[e._v("#")]),e._v(" minConfirmations")]),e._v(" "),a("p",[a("RouterLink",{attrs:{to:"/airnode/v0.5/reference/deployment-files/config-json.html#minconfirmations"}},[a("InfoBtnGreen")],1),e._v(" The number of confirmations required for a request to be considered valid. Defaults to "),a("code",[e._v("0")]),e._v(".")],1),e._v(" "),a("h4",{attrs:{id:"ignoreblockedrequestsafterblocks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ignoreblockedrequestsafterblocks"}},[e._v("#")]),e._v(" ignoreBlockedRequestsAfterBlocks")]),e._v(" "),a("p",[a("RouterLink",{attrs:{to:"/airnode/v0.5/reference/deployment-files/config-json.html#ignoreblockedrequestsafterblocks"}},[a("InfoBtnGreen")],1),e._v(" The number of blocks that need to pass for the node to start ignoring blocked requests. Defaults to "),a("code",[e._v("20")]),e._v(".")],1),e._v(" "),a("h3",{attrs:{id:"nodesettings"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nodesettings"}},[e._v("#")]),e._v(" nodeSettings")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("nodeSettings")]),e._v(" field holds node-specific (Airnode) configuration parameters.")]),e._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"nodeSettings"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"cloudProvider"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"aws"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"region"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"us-east-1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"disableConcurrencyReservations"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"airnodeWalletMnemonic"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"${AIRNODE_WALLET_MNEMONIC}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"heartbeat"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"enabled"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"apiKey"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"${HEARTBEAT_API_KEY}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"${HEARTBEAT_ID}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"url"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"${HEARTBEAT_URL}"')]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"httpGateway"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"enabled"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"apiKey"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"${HTTP_GATEWAY_API_KEY}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"maxConcurrency"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("20")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"httpSignedDataGateway"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"enabled"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"apiKey"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"${HTTP_SIGNED_DATA_GATEWAY_API_KEY}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"maxConcurrency"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("20")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"logFormat"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"plain"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"logLevel"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"INFO"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"nodeVersion"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"0.5.0"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"stage"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"dev"')]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br"),a("span",{staticClass:"line-number"},[e._v("17")]),a("br"),a("span",{staticClass:"line-number"},[e._v("18")]),a("br"),a("span",{staticClass:"line-number"},[e._v("19")]),a("br"),a("span",{staticClass:"line-number"},[e._v("20")]),a("br"),a("span",{staticClass:"line-number"},[e._v("21")]),a("br"),a("span",{staticClass:"line-number"},[e._v("22")]),a("br"),a("span",{staticClass:"line-number"},[e._v("23")]),a("br"),a("span",{staticClass:"line-number"},[e._v("24")]),a("br"),a("span",{staticClass:"line-number"},[e._v("25")]),a("br"),a("span",{staticClass:"line-number"},[e._v("26")]),a("br"),a("span",{staticClass:"line-number"},[e._v("27")]),a("br"),a("span",{staticClass:"line-number"},[e._v("28")]),a("br"),a("span",{staticClass:"line-number"},[e._v("29")]),a("br")])]),a("h4",{attrs:{id:"cloudprovider"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cloudprovider"}},[e._v("#")]),e._v(" cloudProvider")]),e._v(" "),a("p",[a("RouterLink",{attrs:{to:"/airnode/v0.5/reference/deployment-files/config-json.html#cloudprovider"}},[a("InfoBtnGreen")],1),e._v(" Indicates which cloud provider Airnode should be deployed with and its configuration. There are currently three options available: "),a("code",[e._v("aws")]),e._v(", "),a("code",[e._v("gcp")]),e._v(" (deployed using the docker "),a("RouterLink",{attrs:{to:"/airnode/v0.5/grp-providers/docker/deployer-image.html"}},[e._v("deployer-image")]),e._v(") and "),a("code",[e._v("local")]),e._v(" (deployed using the docker "),a("RouterLink",{attrs:{to:"/airnode/v0.5/grp-providers/docker/client-image.html"}},[e._v("client-image")]),e._v(").")],1),e._v(" "),a("ul",[a("li",[e._v("type: Type of the cloud provider. Can be "),a("code",[e._v("aws")]),e._v(", "),a("code",[e._v("gcp")]),e._v(" or "),a("code",[e._v("local")]),e._v(".")]),e._v(" "),a("li",[e._v("region: (AWS and GCP only) Refers to which region of the cloud provider Airnode will be deployed at. An example value for AWS would be "),a("code",[e._v("us-east-1")]),e._v(". When using GCP, use "),a("a",{attrs:{href:"https://cloud.google.com/compute/docs/regions-zones",target:"_blank",rel:"noopener noreferrer"}},[a("strong",[e._v("zone")]),e._v(" not a location"),a("OutboundLink")],1),e._v(". Note that transferring a deployment from one region to the other is not trivial at this moment (i.e., it does not take one command like deployment, but rather three). Therefore, try to pick a region and stick to it for this specific deployment.")]),e._v(" "),a("li",[e._v("disableConcurrencyReservations: (AWS and GCP only) Disables concurency reservations for spawned cloud functions (all of them, including the HTTP gateway one). For more information refer to the "),a("a",{attrs:{href:"#maxconcurrency"}},[a("code",[e._v("maxConcurrency")])]),e._v(" section.")]),e._v(" "),a("li",[e._v("projectId: (GCP only) Project ID of the GCP project the Airnode will be deployed under.")])]),e._v(" "),a("p",[e._v("Learn more about AWS or GCP resources that Airnode uses in the "),a("RouterLink",{attrs:{to:"/airnode/v0.5/reference/cloud-resources.html"}},[e._v("Cloud Resources")]),e._v(" doc.")],1),e._v(" "),a("h4",{attrs:{id:"airnodewalletmnemonic"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#airnodewalletmnemonic"}},[e._v("#")]),e._v(" airnodeWalletMnemonic")]),e._v(" "),a("p",[a("RouterLink",{attrs:{to:"/airnode/v0.5/reference/deployment-files/config-json.html#airnodewalletmnemonic"}},[a("InfoBtnGreen")],1),e._v(" An API provider provides a mnemonic to be used as the Airnode's BIP 44 wallet from which the Airnode's "),a("RouterLink",{attrs:{to:"/airnode/v0.5/concepts/airnode.html#airnodeaddress"}},[e._v("address")]),e._v(" will be derived. It is not required to fund the wallet to run the Airnode but must be funded to announce the "),a("RouterLink",{attrs:{to:"/airnode/v0.5/concepts/airnode.html#xpub"}},[e._v("xpub")]),e._v(" of the Airnode on-chain which is optional.")],1),e._v(" "),a("h4",{attrs:{id:"heartbeat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#heartbeat"}},[e._v("#")]),e._v(" heartbeat")]),e._v(" "),a("p",[a("RouterLink",{attrs:{to:"/airnode/v0.5/reference/deployment-files/config-json.html#heartbeat"}},[a("InfoBtnGreen")],1),e._v(" At the end of each of Airnode's runs (every minute), Airnode can make an HTTP POST request to a specified URL. This is both to signal that the Airnode is alive and working (useful especially right after the deployment) and also to send some metrics from its run. Turn on the heartbeat functionality by setting all fields in the config.json section nodeSettings.heartbeat. See the "),a("RouterLink",{attrs:{to:"/airnode/v0.5/grp-providers/guides/build-an-airnode/heartbeat.html"}},[e._v("Heartbeat")]),e._v(" doc for more info.")],1),e._v(" "),a("ul",[a("li",[e._v("enabled: Enable/disable, using true/false, Airnode's heartbeat.")]),e._v(" "),a("li",[e._v("url: The URL to make the heartbeat request to.")]),e._v(" "),a("li",[e._v("apiKey: The API key to authenticate against the heartbeat URL.")]),e._v(" "),a("li",[e._v("id: The Airnode heartbeat ID for accounting purposes.")])]),e._v(" "),a("h4",{attrs:{id:"httpgateway"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#httpgateway"}},[e._v("#")]),e._v(" httpGateway")]),e._v(" "),a("p",[a("RouterLink",{attrs:{to:"/airnode/v0.5/reference/deployment-files/config-json.html#httpgateway"}},[a("InfoBtnGreen")],1),e._v(" The gateway allows the requesting of defined endpoints without accessing the blockchain. See the "),a("RouterLink",{attrs:{to:"/airnode/v0.5/grp-providers/guides/build-an-airnode/http-gateways.html"}},[e._v("HTTP Gateways")]),e._v(" doc for more info.")],1),e._v(" "),a("ul",[a("li",[e._v("enabled: Enable/disable, using true/false, Airnode's access to the HTTP gateway.")]),e._v(" "),a("li",[e._v("apiKey: A user defined API key to authenticate against the gateway. The key must have a length of between 30 - 120 characters.")]),e._v(" "),a("li",[e._v("maxConcurrency: (optional) A number higher than zero representing the maximum number of serverless functions serving HTTP gateway requests running at the same time. When omitted, there is no maximum concurrency set.")])]),e._v(" "),a("h4",{attrs:{id:"httpsigneddatagateway"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#httpsigneddatagateway"}},[e._v("#")]),e._v(" httpSignedDataGateway")]),e._v(" "),a("p",[a("RouterLink",{attrs:{to:"/airnode/v0.5/reference/deployment-files/config-json.html#httpsigneddatagateway"}},[a("InfoBtnGreen")],1),e._v(" The gateway allows the requesting of defined endpoints without accessing the blockchain. Responses are signed and can be submitted to the blockchain. See the "),a("RouterLink",{attrs:{to:"/airnode/v0.5/grp-providers/guides/build-an-airnode/http-gateways.html"}},[e._v("HTTP Gateways")]),e._v(" doc for more info.")],1),e._v(" "),a("ul",[a("li",[e._v("enabled: Enable/disable, using true/false, Airnode's access to the HTTP gateway.")]),e._v(" "),a("li",[e._v("apiKey: A user defined API key to authenticate against the gateway. The key must have a length of between 30 - 120 characters.")]),e._v(" "),a("li",[e._v("maxConcurrency: (optional) A number higher than zero representing the maximum number of serverless functions serving HTTP gateway requests running at the same time. When omitted, there is no maximum concurrency set.")])]),e._v(" "),a("h4",{attrs:{id:"logformat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#logformat"}},[e._v("#")]),e._v(" logFormat")]),e._v(" "),a("p",[a("RouterLink",{attrs:{to:"/airnode/v0.5/reference/deployment-files/config-json.html#logformat"}},[a("InfoBtnGreen")],1),e._v(" Set one of two possible log formats.")],1),e._v(" "),a("ul",[a("li",[e._v("json")]),e._v(" "),a("li",[e._v("plain")])]),e._v(" "),a("h4",{attrs:{id:"loglevel"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#loglevel"}},[e._v("#")]),e._v(" logLevel")]),e._v(" "),a("p",[a("RouterLink",{attrs:{to:"/airnode/v0.5/reference/deployment-files/config-json.html#loglevel"}},[a("InfoBtnGreen")],1),e._v(" Set one of four possible log levels.")],1),e._v(" "),a("ul",[a("li",[e._v("DEBUG")]),e._v(" "),a("li",[e._v("INFO")]),e._v(" "),a("li",[e._v("WARN")]),e._v(" "),a("li",[e._v("ERROR")])]),e._v(" "),a("h4",{attrs:{id:"nodeversion"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nodeversion"}},[e._v("#")]),e._v(" nodeVersion")]),e._v(" "),a("p",[a("RouterLink",{attrs:{to:"/airnode/v0.5/reference/deployment-files/config-json.html#nodeversion"}},[a("InfoBtnGreen")],1),e._v(" Of the form "),a("code",[e._v("#.#.#")]),e._v(", this field indicates which node (Airnode) version this "),a("code",[e._v("config.json")]),e._v(" is prepared for. Since the "),a("code",[e._v("config.json")]),e._v(" format can be expected to change with node versions, using a "),a("code",[e._v("config.json")]),e._v(" prepared for one Airnode version with another may result in unexpected issues. See the "),a("a",{attrs:{href:"https://github.com/api3dao/airnode/releases",target:"_blank",rel:"noopener noreferrer"}},[e._v("Releases page of the Airnode repo"),a("OutboundLink")],1),e._v(" for available versions.")],1),e._v(" "),a("h4",{attrs:{id:"stage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stage"}},[e._v("#")]),e._v(" stage")]),e._v(" "),a("p",[a("RouterLink",{attrs:{to:"/airnode/v0.5/reference/deployment-files/config-json.html#stage"}},[a("InfoBtnGreen")],1),e._v(" This field allows the deployment of multiple Airnodes with the same provider ID. For example, the same Airnode may have multiple deployments with "),a("code",[e._v("stage")]),e._v(" set to a different value (dev, public, prod). "),a("code",[e._v("stage")]),e._v(" cannot be longer than 16 characters and can only include lowercase alphanumeric characters ("),a("code",[e._v("a–z")]),e._v(", "),a("code",[e._v("0–9")]),e._v(") and hyphens ("),a("code",[e._v("-")]),e._v(").")],1),e._v(" "),a("h4",{attrs:{id:"skipvalidation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#skipvalidation"}},[e._v("#")]),e._v(" skipValidation")]),e._v(" "),a("p",[a("RouterLink",{attrs:{to:"/airnode/v0.5/reference/deployment-files/config-json.html#skipvalidation"}},[a("InfoBtnGreen")],1),e._v(" This is an optional attribute which decides whether Airnode validates the config.json during deployment or when run in a docker. Possible values are "),a("code",[e._v("true")]),e._v(" and "),a("code",[e._v("false")]),e._v(". By default, this flag is set to "),a("code",[e._v("false")]),e._v(".")],1),e._v(" "),a("h3",{attrs:{id:"triggers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#triggers"}},[e._v("#")]),e._v(" triggers")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("triggers")]),e._v(" field allows you to expose Airnode endpoints from an OIS selectively for the RRP protocol or via the HTTP gateway. For example, your OIS may include 10 endpoints, but you may only want to serve 2 for RRP and all 10 for the gateway.")]),e._v(" "),a("p",[e._v("List the endpoints that you want to serve with the request–response protocol (RRP) under "),a("code",[e._v("triggers.rrp")]),e._v(". List the endpoints that you want to serve with the HTTP gateway under "),a("code",[e._v("triggers.http")]),e._v(". List the endpoints which can be used to get the signed data in "),a("code",[e._v("triggers.httpSignedData")]),e._v(". In most cases, you would create a trigger for each endpoint in your OIS object.")]),e._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"triggers"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"rrp"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"endpointId"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"0xf10f067e716dd8b9c91b818e3a933b880ecb3929c04a6cd234c171aa27c6eefe"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"oisTitle"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"CoinGecko Requests"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"endpointName"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"coinGeckoMarketData"')]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"http"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"endpointId"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"0xf10f067e716dd8b9c91b818e3a933b880ecb3929c04a6cd234c171aa27c6eefe"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"oisTitle"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"CoinGecko Requests"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"endpointName"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"coinGeckoMarketData"')]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"httpSignedData"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"endpointId"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"0xf10f067e716dd8b9c91b818e3a933b880ecb3929c04a6cd234c171aa27c6eefe"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"oisTitle"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"CoinGecko Requests"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"endpointName"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"coinGeckoMarketData"')]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br"),a("span",{staticClass:"line-number"},[e._v("17")]),a("br"),a("span",{staticClass:"line-number"},[e._v("18")]),a("br"),a("span",{staticClass:"line-number"},[e._v("19")]),a("br"),a("span",{staticClass:"line-number"},[e._v("20")]),a("br"),a("span",{staticClass:"line-number"},[e._v("21")]),a("br"),a("span",{staticClass:"line-number"},[e._v("22")]),a("br"),a("span",{staticClass:"line-number"},[e._v("23")]),a("br")])]),a("p",[a("code",[e._v("rrp")]),e._v(", "),a("code",[e._v("http")]),e._v(" and "),a("code",[e._v("httpSignedData")]),e._v(" require an "),a("code",[e._v("endpointId")]),e._v(" which can be derived from the "),a("code",[e._v("oisTitle")]),e._v(" and "),a("code",[e._v("endpointName")]),e._v(", use the CLI command "),a("RouterLink",{attrs:{to:"/airnode/v0.5/reference/packages/admin-cli.html#derive-endpoint-id"}},[e._v("derive-endpoint-id")]),e._v(".")],1),e._v(" "),a("h4",{attrs:{id:"rrp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rrp"}},[e._v("#")]),e._v(" rrp")]),e._v(" "),a("p",[a("RouterLink",{attrs:{to:"/airnode/v0.5/reference/deployment-files/config-json.html#rrp"}},[a("InfoBtnGreen")],1),e._v(" An array of endpoints from OIS that the Airnode will respond to for the RRP protocol. Only endpoints listed here will be served through the RRP protocol "),a("RouterLink",{attrs:{to:"/airnode/v0.5/concepts/airnode.html"}},[e._v("AirnodeRrp.sol")]),e._v(".")],1),e._v(" "),a("ul",[a("li",[a("p",[e._v("oisTitle & endpointName: Each trigger has an "),a("code",[e._v("oisTitle")]),e._v(" and "),a("code",[e._v("endpointName")]),e._v(" that allow you to refer to one of the endpoints in an OIS object. Remember that an Airnode's config.json file can have more than one OIS object.")])]),e._v(" "),a("li",[a("p",[e._v("endpointId: Add an "),a("code",[e._v("endpointId")]),e._v(" to the trigger which is the ID that a requester will use for on-chain requests to reference a specific trigger. Use the admin CLI command "),a("RouterLink",{attrs:{to:"/airnode/v0.5/reference/packages/admin-cli.html#derive-endpoint-id"}},[e._v("derive-endpoint-id")]),e._v(" to derive endpoint IDs using the "),a("code",[e._v("oisTitle")]),e._v(" and "),a("code",[e._v("endpointName")]),e._v(".")],1)])]),e._v(" "),a("h4",{attrs:{id:"http"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http"}},[e._v("#")]),e._v(" http")]),e._v(" "),a("p",[a("RouterLink",{attrs:{to:"/airnode/v0.5/reference/deployment-files/config-json.html#http"}},[a("InfoBtnGreen")],1),e._v(" An array of endpoints from OIS that the Airnode will respond to for the HTTP gateway. Only endpoints listed here can be tested via the HTTP gateway.")],1),e._v(" "),a("ul",[a("li",[a("p",[e._v("oisTitle & endpointName: Each trigger has an "),a("code",[e._v("oisTitle")]),e._v(" and "),a("code",[e._v("endpointName")]),e._v(" that allow you to refer to one of the endpoints in an OIS object. Remember that an Airnode's config.json file can have more than one OIS object.")])]),e._v(" "),a("li",[a("p",[e._v("endpointId: Add an "),a("code",[e._v("endpointId")]),e._v(" to the trigger which is the ID that a requester will use for on-chain requests to reference a specific trigger. Use the admin CLI command "),a("RouterLink",{attrs:{to:"/airnode/v0.5/reference/packages/admin-cli.html#derive-endpoint-id"}},[e._v("derive-endpoint-id")]),e._v(" to derive endpoint IDs using the "),a("code",[e._v("oisTitle")]),e._v(" and "),a("code",[e._v("endpointName")]),e._v(".")],1)])]),e._v(" "),a("h4",{attrs:{id:"httpsigneddata"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#httpsigneddata"}},[e._v("#")]),e._v(" httpSignedData")]),e._v(" "),a("p",[a("RouterLink",{attrs:{to:"/airnode/v0.5/reference/deployment-files/config-json.html#httpsigneddata"}},[a("InfoBtnGreen")],1),e._v(" An array of endpoints from OIS that the Airnode will respond to for the signed data requests. Only endpoints listed here can be called to provide the signed data.")],1),e._v(" "),a("ul",[a("li",[a("p",[e._v("oisTitle & endpointName: Each trigger has an "),a("code",[e._v("oisTitle")]),e._v(" and "),a("code",[e._v("endpointName")]),e._v(" that allow you to refer to one of the endpoints in an OIS object. Remember that an Airnode's config.json file can have more than one OIS object.")])]),e._v(" "),a("li",[a("p",[e._v("endpointId: Add an "),a("code",[e._v("endpointId")]),e._v(" to the trigger which is the ID that a requester will use for on-chain requests to reference a specific trigger. Use the admin CLI command "),a("RouterLink",{attrs:{to:"/airnode/v0.5/reference/packages/admin-cli.html#derive-endpoint-id"}},[e._v("derive-endpoint-id")]),e._v(" to derive endpoint IDs using the "),a("code",[e._v("oisTitle")]),e._v(" and "),a("code",[e._v("endpointName")]),e._v(".")],1)])]),e._v(" "),a("h3",{attrs:{id:"ois"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ois"}},[e._v("#")]),e._v(" ois")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("ois")]),e._v(" field is a list OIS objects that Airnode will be serving. This means that a single instance of an Airnode can serve multiple APIs. You can simply copy paste OIS objects that you will be serving into the "),a("code",[e._v("ois")]),e._v(" list. Use the previous guide "),a("RouterLink",{attrs:{to:"/airnode/v0.5/grp-providers/guides/build-an-airnode/api-integration.html"}},[e._v("API Integration")]),e._v(" to create an OIS object.")],1),e._v(" "),a("h3",{attrs:{id:"apicredentials"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#apicredentials"}},[e._v("#")]),e._v(" apiCredentials")]),e._v(" "),a("p",[e._v("Each entry in "),a("code",[e._v("apiCredentials")]),e._v(" maps to a security scheme defined in an OIS ("),a("code",[e._v("ois[n].components.securitySchemes.{securitySchemeName}")]),e._v(" and "),a("code",[e._v("ois[n].security")]),e._v("), where "),a("code",[e._v("oisTitle")]),e._v(" is the "),a("code",[e._v("title")]),e._v(" field of the related OIS, and "),a("code",[e._v("securitySchemeName")]),e._v(" is the name of the respective security scheme. These would be "),a("code",[e._v("myOisTitle")]),e._v(" and "),a("code",[e._v("mySecurityScheme")]),e._v(" in the example below. "),a("code",[e._v("securitySchemeValue")]),e._v(" is the value used for the authentication with the security scheme (e.g., the API key).")]),e._v(" "),a("p",[e._v("Use of apiCredentials is not required, leave its array empty if you don't need any security scheme.")]),e._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// apiCredentials")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"oisTitle"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"myOisTitle"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"securitySchemeName"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"mySecurityScheme"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"securitySchemeValue"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"${SS_MY_API_KEY}"')]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// From the OIS object apiCredentials is referencing")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// using the oisTitle/securitySchemeName pair.")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"title"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"myOisTitle"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  ..."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"components"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"securitySchemes"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"mySecurityScheme"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"in"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"header"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"apiKey"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"X-api-key"')]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"security"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"mySecurityScheme"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n  ...\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br"),a("span",{staticClass:"line-number"},[e._v("17")]),a("br"),a("span",{staticClass:"line-number"},[e._v("18")]),a("br"),a("span",{staticClass:"line-number"},[e._v("19")]),a("br"),a("span",{staticClass:"line-number"},[e._v("20")]),a("br"),a("span",{staticClass:"line-number"},[e._v("21")]),a("br"),a("span",{staticClass:"line-number"},[e._v("22")]),a("br"),a("span",{staticClass:"line-number"},[e._v("23")]),a("br"),a("span",{staticClass:"line-number"},[e._v("24")]),a("br"),a("span",{staticClass:"line-number"},[e._v("25")]),a("br"),a("span",{staticClass:"line-number"},[e._v("26")]),a("br"),a("span",{staticClass:"line-number"},[e._v("27")]),a("br"),a("span",{staticClass:"line-number"},[e._v("28")]),a("br")])]),a("h4",{attrs:{id:"oistitle"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#oistitle"}},[e._v("#")]),e._v(" "),a("code",[e._v("oisTitle")])]),e._v(" "),a("p",[a("RouterLink",{attrs:{to:"/airnode/v0.5/reference/deployment-files/config-json.html#oistitle"}},[a("InfoBtnGreen")],1),e._v(" The "),a("code",[e._v("ois.title")]),e._v(" of the OIS where the "),a("code",[e._v("securitySchemeName")]),e._v(" can be found.")],1),e._v(" "),a("h4",{attrs:{id:"securityschemename"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#securityschemename"}},[e._v("#")]),e._v(" "),a("code",[e._v("securitySchemeName")])]),e._v(" "),a("p",[a("RouterLink",{attrs:{to:"/airnode/v0.5/reference/deployment-files/config-json.html#securityschemename"}},[a("InfoBtnGreen")],1),e._v(" The name of a security scheme from "),a("code",[e._v("ois[n].components.securitySchemes.{securitySchemeName}")]),e._v(".")],1),e._v(" "),a("h4",{attrs:{id:"securityschemevalue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#securityschemevalue"}},[e._v("#")]),e._v(" "),a("code",[e._v("securitySchemeValue")])]),e._v(" "),a("p",[a("RouterLink",{attrs:{to:"/airnode/v0.5/reference/deployment-files/config-json.html#securityschemevalue"}},[a("InfoBtnGreen")],1),e._v(" The value of the security scheme used (as defined by "),a("code",[e._v("ois[n].components.securitySchemes.{securitySchemeName}")]),e._v(" for the authentication. Usually stored in "),a("code",[e._v("secrets.env")]),e._v(".")],1),e._v(" "),a("p",[e._v("Based on the setup above Airnode will call the API operation with the following header.")]),e._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[e._v("headers"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"X-api-key"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"834989348HHGTDS_8754"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("h2",{attrs:{id:"creating-secrets-env"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#creating-secrets-env"}},[e._v("#")]),e._v(" Creating "),a("code",[e._v("secrets.env")])]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("secrets.env")]),e._v(" file contains values (secrets) such as blockchain provider urls, chain provider urls, etc. These secrets are embedded in "),a("RouterLink",{attrs:{to:"/airnode/v0.5/reference/deployment-files/config-json.html"}},[e._v("config.json")]),e._v(" using interpolation.")],1),e._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// Sample interpolation value from config.json")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"httpGateway"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"enabled"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"apiKey"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"${HTTP_GATEWAY_API_KEY}"')]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// Sample variable in secrets.env")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// Variable names cannot contain dashes (-).")]),e._v("\nHTTP_GATEWAY_API_KEY="),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"FRACZKMH4F32BZ8X5uTd"')]),e._v("\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br")])]),a("p",[e._v("Use the "),a("RouterLink",{attrs:{to:"/airnode/v0.5/reference/templates/secrets-env.html"}},[e._v("secrets.env")]),e._v(" template and refer to "),a("RouterLink",{attrs:{to:"/airnode/v0.5/reference/deployment-files/secrets-env.html"}},[e._v("Reference > Deployment Files > secrets.env")]),e._v(" as needed.")],1),e._v(" "),a("h2",{attrs:{id:"aws-setup-aws-deployment-only"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aws-setup-aws-deployment-only"}},[e._v("#")]),e._v(" AWS setup (AWS deployment only)")]),e._v(" "),a("p",[e._v("When it is time to deploy the Airnode to AWS, the Docker "),a("RouterLink",{attrs:{to:"/airnode/v0.5/grp-providers/docker/deployer-image.html"}},[e._v("deployer image")]),e._v(" will need the AWS credentials to build the node on AWS Lambda.")],1),e._v(" "),a("h3",{attrs:{id:"creating-aws-env-aws-only"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#creating-aws-env-aws-only"}},[e._v("#")]),e._v(" Creating "),a("code",[e._v("aws.env")]),e._v(" (AWS only)")]),e._v(" "),a("p",[e._v("Follow "),a("a",{attrs:{href:"https://www.youtube.com/watch?v=KngM5bfpttA",target:"_blank",rel:"noopener noreferrer"}},[e._v("this video"),a("OutboundLink")],1),e._v(" if needed. It will show you how to create an IAM user and get security credentials. Put them in the "),a("code",[e._v("aws.env")]),e._v(" file as shown below. See an "),a("RouterLink",{attrs:{to:"/airnode/v0.5/reference/templates/aws-env.html"}},[e._v("example file")]),e._v(" in the reference section.")],1),e._v(" "),a("ul",[a("li",[e._v('Do not place double quotes (") around the value of each variable.')]),e._v(" "),a("li",[e._v("Variable names cannot contain dashes (-).")])]),e._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("AWS_ACCESS_KEY_ID")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("XYZ"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("..")]),e._v(".123\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("AWS_SECRET_ACCESS_KEY")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("ABC7"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("..")]),e._v(".89\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("h2",{attrs:{id:"gcp-setup-gcp-deployment-only"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gcp-setup-gcp-deployment-only"}},[e._v("#")]),e._v(" GCP setup (GCP deployment only)")]),e._v(" "),a("p",[e._v("When it is time to deploy the Airnode to GCP, the Docker "),a("RouterLink",{attrs:{to:"/airnode/v0.5/grp-providers/docker/deployer-image.html"}},[e._v("deployer image")]),e._v(" will need the GCP project ID to build the Airnode.")],1),e._v(" "),a("h3",{attrs:{id:"creating-a-gcp-project"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#creating-a-gcp-project"}},[e._v("#")]),e._v(" Creating a GCP project")]),e._v(" "),a("p",[e._v("First, you need to "),a("a",{attrs:{href:"https://cloud.google.com/resource-manager/docs/creating-managing-projects",target:"_blank",rel:"noopener noreferrer"}},[e._v("create a GCP project"),a("OutboundLink")],1),e._v(" under which will the Airnode be deployed. Once the project is created, insert its "),a("RouterLink",{attrs:{to:"/airnode/v0.5/grp-providers/guides/build-an-airnode/configuring-airnode.html#cloudprovider"}},[e._v("projectId")]),e._v(" into your "),a("code",[e._v("config.json")]),e._v(".")],1),e._v(" "),a("h3",{attrs:{id:"enable-required-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#enable-required-api"}},[e._v("#")]),e._v(" Enable required API")]),e._v(" "),a("p",[e._v("In order for Airnode to deploy successfully, you need to enable "),a("a",{attrs:{href:"https://console.cloud.google.com/apis/library/appengine.googleapis.com",target:"_blank",rel:"noopener noreferrer"}},[e._v("App Engine Admin API"),a("OutboundLink")],1),e._v(" for your GCP project. After enabling it, wait a few minutes before the deployment itself so the change will take place.")]),e._v(" "),a("h3",{attrs:{id:"creating-a-service-account"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#creating-a-service-account"}},[e._v("#")]),e._v(" Creating a Service Account")]),e._v(" "),a("p",[e._v("Create a new service account from the "),a("a",{attrs:{href:"https://console.cloud.google.com/iam-admin/serviceaccounts",target:"_blank",rel:"noopener noreferrer"}},[e._v("Service accounts"),a("OutboundLink")],1),e._v(" menu. Grant this service account access to the project by adding a role "),a("code",[e._v("Owner")]),e._v(" during the creation process.")]),e._v(" "),a("p",[e._v("Once the account is created, add a new access key of type JSON for this account. Download the key file as "),a("code",[e._v("gcp.json")]),e._v(" into the root of your project.")]),e._v(" "),a("h2",{attrs:{id:"summary"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#summary"}},[e._v("#")]),e._v(" Summary")]),e._v(" "),a("p",[e._v("In this guide you created the "),a("code",[e._v("config.json")]),e._v(", "),a("code",[e._v("secrets.env")]),e._v(" and obtained cloud provider credentials required to deploy an Airnode to a cloud provider. Note that "),a("code",[e._v("config.json")]),e._v(" is user-specific and therefore it is not much use to others.")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("secrets.env")]),e._v(", "),a("code",[e._v("aws.env")]),e._v(" and "),a("code",[e._v("gcp.json")]),e._v(" files contains keys, chain provider urls and security credentials, so they should be kept secret. Make sure that you do not push your credentials to a repository or otherwise expose them as these credentials can be used to gain access to your Airnode's private key, AWS account or GCP account.")]),e._v(" "),a("p",[e._v("The next three steps in this guide are optional.")]),e._v(" "),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/airnode/v0.5/grp-providers/guides/build-an-airnode/apply-auth.html"}},[e._v("Using Authorizers")]),e._v(" optional")],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/airnode/v0.5/grp-providers/guides/build-an-airnode/heartbeat.html"}},[e._v("Heartbeat")]),e._v(" optional")],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/airnode/v0.5/grp-providers/guides/build-an-airnode/http-gateways.html"}},[e._v("HTTP Gateways")]),e._v(" optional")],1)])],1)}),[],!1,null,null,null);t.default=n.exports}}]);